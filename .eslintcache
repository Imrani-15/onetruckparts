[{"F:\\onetruckparts\\src\\index.js":"1","F:\\onetruckparts\\src\\reportWebVitals.js":"2","F:\\onetruckparts\\src\\App.js":"3","F:\\onetruckparts\\src\\utils\\UserProfile.js":"4","F:\\onetruckparts\\src\\store\\configureStore.js":"5","F:\\onetruckparts\\src\\containers\\Auth\\FirebaseAuth.js":"6","F:\\onetruckparts\\src\\containers\\Launch.js":"7","F:\\onetruckparts\\src\\utils\\Constants.js":"8","F:\\onetruckparts\\src\\containers\\Auth\\Login.js":"9","F:\\onetruckparts\\src\\containers\\Auth\\ForgotPassword.js":"10","F:\\onetruckparts\\src\\containers\\Auth\\Register.js":"11","F:\\onetruckparts\\src\\containers\\Brands\\BrandsPage.js":"12","F:\\onetruckparts\\src\\containers\\Products\\ProductDetailsPage.js":"13","F:\\onetruckparts\\src\\containers\\Home\\HomePage.js":"14","F:\\onetruckparts\\src\\containers\\Products\\ProductsList.js":"15","F:\\onetruckparts\\src\\containers\\Cart\\CartPage.js":"16","F:\\onetruckparts\\src\\containers\\Products\\SearchProductsList.js":"17","F:\\onetruckparts\\src\\containers\\Settings\\PageNotFound.js":"18","F:\\onetruckparts\\src\\containers\\Cart\\SaveLater.js":"19","F:\\onetruckparts\\src\\containers\\Orders\\Orders.js":"20","F:\\onetruckparts\\src\\containers\\Orders\\TrackOrder.js":"21","F:\\onetruckparts\\src\\containers\\CheckOut\\OrderSuccess.js":"22","F:\\onetruckparts\\src\\containers\\CheckOut\\CheckOutPage.js":"23","F:\\onetruckparts\\src\\containers\\FooterPages\\AboutUs.js":"24","F:\\onetruckparts\\src\\containers\\FooterPages\\Terms.js":"25","F:\\onetruckparts\\src\\containers\\FooterPages\\Privacy.js":"26","F:\\onetruckparts\\src\\containers\\Settings\\HomeSettings.js":"27","F:\\onetruckparts\\src\\components\\Footer\\Footer.js":"28","F:\\onetruckparts\\src\\components\\Navbar\\Navbar.js":"29","F:\\onetruckparts\\src\\store\\reducers\\index.js":"30","F:\\onetruckparts\\src\\components\\OneButton.js":"31","F:\\onetruckparts\\src\\components\\AppSpinner.js":"32","F:\\onetruckparts\\src\\utils\\Utils.js":"33","F:\\onetruckparts\\src\\utils\\Services.js":"34","F:\\onetruckparts\\src\\components\\ReactSnackBar.js":"35","F:\\onetruckparts\\src\\utils\\commonService.js":"36","F:\\onetruckparts\\src\\containers\\CheckOut\\Locations.js":"37","F:\\onetruckparts\\src\\components\\Navbar\\MobileNavbar.js":"38","F:\\onetruckparts\\src\\components\\Navbar\\DesktopNavbar.js":"39","F:\\onetruckparts\\src\\components\\Slider.js":"40","F:\\onetruckparts\\src\\components\\ProductCard\\ProductCard.js":"41","F:\\onetruckparts\\src\\store\\reducers\\reducers.js":"42","F:\\onetruckparts\\src\\components\\Navbar\\Search.js":"43","F:\\onetruckparts\\src\\utils\\createReducer.js":"44","F:\\onetruckparts\\src\\store\\actions\\actionTypes.js":"45"},{"size":521,"mtime":1625647586383,"results":"46","hashOfConfig":"47"},{"size":375,"mtime":1625647586387,"results":"48","hashOfConfig":"47"},{"size":1852,"mtime":1625647586299,"results":"49","hashOfConfig":"47"},{"size":3140,"mtime":1625647586393,"results":"50","hashOfConfig":"47"},{"size":719,"mtime":1625647586389,"results":"51","hashOfConfig":"47"},{"size":495,"mtime":1625647586356,"results":"52","hashOfConfig":"47"},{"size":3668,"mtime":1625647586373,"results":"53","hashOfConfig":"47"},{"size":1693,"mtime":1625647586391,"results":"54","hashOfConfig":"47"},{"size":10612,"mtime":1625647586357,"results":"55","hashOfConfig":"47"},{"size":4318,"mtime":1625647586357,"results":"56","hashOfConfig":"47"},{"size":7582,"mtime":1625647586358,"results":"57","hashOfConfig":"47"},{"size":6025,"mtime":1625647586359,"results":"58","hashOfConfig":"47"},{"size":20696,"mtime":1625647586378,"results":"59","hashOfConfig":"47"},{"size":11841,"mtime":1625647586372,"results":"60","hashOfConfig":"47"},{"size":14519,"mtime":1625647586379,"results":"61","hashOfConfig":"47"},{"size":11128,"mtime":1625647586360,"results":"62","hashOfConfig":"47"},{"size":9561,"mtime":1625647586380,"results":"63","hashOfConfig":"47"},{"size":661,"mtime":1625647586382,"results":"64","hashOfConfig":"47"},{"size":7754,"mtime":1625647586361,"results":"65","hashOfConfig":"47"},{"size":16335,"mtime":1625647586375,"results":"66","hashOfConfig":"47"},{"size":11608,"mtime":1625647586376,"results":"67","hashOfConfig":"47"},{"size":1138,"mtime":1625647586364,"results":"68","hashOfConfig":"47"},{"size":41765,"mtime":1625647586363,"results":"69","hashOfConfig":"47"},{"size":7860,"mtime":1625647586368,"results":"70","hashOfConfig":"47"},{"size":25460,"mtime":1625647586370,"results":"71","hashOfConfig":"47"},{"size":9306,"mtime":1625647586368,"results":"72","hashOfConfig":"47"},{"size":7672,"mtime":1625647586382,"results":"73","hashOfConfig":"47"},{"size":5168,"mtime":1625647586343,"results":"74","hashOfConfig":"47"},{"size":19821,"mtime":1625647586347,"results":"75","hashOfConfig":"47"},{"size":255,"mtime":1625647586390,"results":"76","hashOfConfig":"47"},{"size":974,"mtime":1625647586348,"results":"77","hashOfConfig":"47"},{"size":796,"mtime":1625647586340,"results":"78","hashOfConfig":"47"},{"size":1133,"mtime":1625647586393,"results":"79","hashOfConfig":"47"},{"size":1426,"mtime":1625647586392,"results":"80","hashOfConfig":"47"},{"size":7268,"mtime":1625647586351,"results":"81","hashOfConfig":"47"},{"size":3489,"mtime":1625647586394,"results":"82","hashOfConfig":"47"},{"size":19474,"mtime":1625647586363,"results":"83","hashOfConfig":"47"},{"size":12539,"mtime":1625647586345,"results":"84","hashOfConfig":"47"},{"size":18293,"mtime":1625647586345,"results":"85","hashOfConfig":"47"},{"size":649,"mtime":1625647586352,"results":"86","hashOfConfig":"47"},{"size":2909,"mtime":1625647586350,"results":"87","hashOfConfig":"47"},{"size":1079,"mtime":1625647586390,"results":"88","hashOfConfig":"47"},{"size":6797,"mtime":1625647586348,"results":"89","hashOfConfig":"47"},{"size":301,"mtime":1625647586394,"results":"90","hashOfConfig":"47"},{"size":399,"mtime":1625647586389,"results":"91","hashOfConfig":"47"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},"1s6f39d",{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"94"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"94"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"94"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"94"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"94"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"94"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"94"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"94"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"94"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152","usedDeprecatedRules":"94"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155","usedDeprecatedRules":"94"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158","usedDeprecatedRules":"94"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161","usedDeprecatedRules":"94"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"164","usedDeprecatedRules":"94"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"167","usedDeprecatedRules":"94"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"172","usedDeprecatedRules":"94"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"185","usedDeprecatedRules":"94"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"194","usedDeprecatedRules":"94"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"F:\\onetruckparts\\src\\index.js",[],["201","202"],"F:\\onetruckparts\\src\\reportWebVitals.js",[],"F:\\onetruckparts\\src\\App.js",[],"F:\\onetruckparts\\src\\utils\\UserProfile.js",[],"F:\\onetruckparts\\src\\store\\configureStore.js",[],"F:\\onetruckparts\\src\\containers\\Auth\\FirebaseAuth.js",[],"F:\\onetruckparts\\src\\containers\\Launch.js",[],"F:\\onetruckparts\\src\\utils\\Constants.js",[],"F:\\onetruckparts\\src\\containers\\Auth\\Login.js",["203"],"import React from 'react';\r\n\r\nimport firebase from 'firebase/app';\r\nimport { connect } from \"react-redux\";\r\nimport { Toast } from 'primereact/toast';\r\nimport {Password} from 'primereact/password';\r\nimport { Divider } from 'primereact/divider';\r\nimport { Messages } from 'primereact/messages';\r\nimport { InputText } from \"primereact/inputtext\";\r\n\r\nimport FirebaseAuth from './FirebaseAuth';\r\nimport OneButton from '../../components/OneButton';\r\nimport AppSpinner from '../../components/AppSpinner';\r\nimport {formValidation,emailValidation} from '../../utils/Utils';\r\nimport logo from '../../assets/logo.png';\r\nimport userProfile from '../../utils/UserProfile';\r\nimport {appTheme, PRODUCT_BASE_URL} from  '../../utils/Constants';\r\n\r\nimport callSerivce from '../../utils/Services';\r\nimport './Auth.css'\r\n\r\nclass Login extends React.Component {\r\n  \r\n \r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            loading:false,\r\n            formInvalid: false,\r\n            emailId:'',\r\n            password:'',\r\n            isError:{\r\n                emailId:'',\r\n                password:'',\r\n            }\r\n        }\r\n        this.toastRef = React.createRef();\r\n        this.messageRef = React.createRef();\r\n    }\r\n\r\n   \r\n\r\n    handleChange = (event) => {\r\n        event.preventDefault();\r\n        const { name, value } = event.target;\r\n        let isError = { ...this.state.isError };\r\n        switch (name) {\r\n          case 'emailId': \r\n          isError.emailId = \r\n            emailValidation.test(value)\r\n                ? ''\r\n                : 'Email is not valid.';\r\n            break;\r\n          case 'password': \r\n          isError.password = \r\n              value.length ===0\r\n                ? 'password is required'\r\n                : '';\r\n            break;\r\n          default:\r\n            break;\r\n        }\r\n      \r\n        this.setState({\r\n            isError,\r\n            [name]: value,\r\n            formInvalid:false\r\n        })\r\n    }\r\n\r\n    componentDidMount(){\r\n    }\r\n\r\n  \r\n\r\n    submitLogin = () => {\r\n        const {emailId, password } = this.state;\r\n        this.setState({loading:true})\r\n        if (formValidation(this.state.isError,{emailId,password})) {\r\n            this.setState({ formInvalid: false })\r\n            FirebaseAuth.auth().signInWithEmailAndPassword(emailId, password).then(async(user)=>{\r\n                    if(user){\r\n                        let currentUser  = await FirebaseAuth.auth().currentUser;\r\n                        let token = currentUser &&  await FirebaseAuth.auth().currentUser.getIdToken(true);  \r\n                                let userData = {\r\n                                    userId: currentUser.uid,\r\n                                    emailId : currentUser.email,\r\n                                    accessToken : token,\r\n                                    userRole : false  //response.data.role\r\n                                }\r\n                                userProfile.setUserObj(userData);\r\n                                this.props.setUserLoginData(userData)\r\n                         \r\n            \r\n                                let guestCart = userProfile.getCart();\r\n                                if(guestCart && guestCart.length !==0){\r\n                                    let restUrl = `${PRODUCT_BASE_URL}cart/addGuestCart`;\r\n                                    callSerivce({cart:guestCart}, restUrl, 'POST')\r\n                                        .then((res) => {\r\n                                            if(!res.data.error){\r\n                                                userProfile.setCart(res.data.cart);\r\n                                                userProfile.setGarage(res.data.garage);\r\n                                            }\r\n                                        })\r\n                                }\r\n\r\n                                setTimeout(() => {\r\n                                    this.setState({loading:false})\r\n                                    this.props.history.replace('/');\r\n                                }, 1000);\r\n                            \r\n                  \r\n\r\n                    }else{\r\n                        this.setState({loading:false});\r\n                    }\r\n            \r\n            \r\n            \r\n                }\r\n            )\r\n            .catch(err => {\r\n                switch (err.code){\r\n                    case \"auth/invalid-email\":\r\n                    case \"auth/user-disabled\":\r\n                    case \"auth/user-not-found\":\r\n                        this.setState({loading:false},()=>{\r\n                            this.messageRef.current.show({ severity: 'error', summary: '', content:\r\n                            (<h5>{err.message}</h5>), \r\n                             closable:false,\r\n                             sticky: false })\r\n                        })\r\n                    break;\r\n                    case \"auth/wrong-password\":\r\n                        this.setState({loading:false},()=>{\r\n                            this.messageRef.current.show({ severity: 'error', summary: '', content:\r\n                            (<h5>{err.message}</h5>), \r\n                            closable:false,\r\n                            sticky: false })\r\n                        })\r\n                    break;\r\n                }\r\n            })\r\n        } else {\r\n            this.setState({loading:false, formInvalid:true})\r\n            this.showTost('error', 'Login', 'Please enter all required fields.');\r\n        }\r\n      \r\n    }\r\n\r\n\r\n\r\n    loginUsingGmail = () => {\r\n        var provider = new firebase.auth.GoogleAuthProvider();\r\n        FirebaseAuth.auth()\r\n            .signInWithPopup(provider)\r\n            .then((result) => {\r\n                var credential = result.credential;\r\n                var token = credential.idToken;\r\n                var currentUser = result.user;\r\n                \r\n                let userData = {\r\n                    userId: currentUser.uid,\r\n                    emailId : currentUser.email,\r\n                    accessToken : token,\r\n                    userRole : false  //response.data.role\r\n                }\r\n                userProfile.setUserObj(userData);\r\n                this.props.setUserLoginData(userData)\r\n                this.setState({loading:false})\r\n                this.props.history.replace('/');\r\n            }).catch((error) => {\r\n                // Handle Errors here.\r\n\r\n            });\r\n    }\r\n\r\n\r\n\r\n    showTost(type, title, detail) {\r\n        this.toastRef.current.show({ severity: type, summary: title, detail: detail, life: 2000 });\r\n    }\r\n\r\n\r\n    render(){\r\n        const  {loading, emailId, password, isError , formInvalid} = this.state;\r\n        return(\r\n            <div className=\"login-body\">\r\n                <Toast ref={this.toastRef} />\r\n                {loading && <AppSpinner /> }\r\n                <div className=\"login-main p-shadow-1\">\r\n                    <img src={logo} alt={'logo'} style={{justifySelf: 'center'}} height=\"48px\"  onClick={()=>this.props.history.replace('/')}  />\r\n                    <h1 style={{textAlign:'center', fontWeight:'500', color:appTheme.secondaryColor}}>Sign in to continue</h1>\r\n                    <Messages ref={this.messageRef} style={{width:300}} />\r\n                    <div className=\"p-field\">\r\n                        <label htmlFor=\"email\" className=\"p-d-block\">Email address</label>\r\n                        <InputText id=\"email\" value={emailId} name=\"emailId\" \r\n                        className={(isError.emailId.length > 0 || formInvalid) ? \"p-invalid p-inputtext-sm p-d-block\" :\"p-inputtext-sm p-d-block\"}\r\n                        onChange={this.handleChange} style={{width:300}} />\r\n                        {isError.emailId.length > 0 && (\r\n                          <small id=\"email-help\" className=\"p-error p-d-block\">{isError.emailId}</small>\r\n                        )}\r\n                    </div>\r\n                    <div className=\"p-field\">\r\n                        <label htmlFor=\"password\" className=\"p-d-block\">Password</label>\r\n                        <Password id=\"password\" value={password} name=\"password\" \r\n                        className={(isError.password.length > 0 || formInvalid) ? \"p-invalid p-password p-password-sm\" :\"p-password p-password-sm\"}\r\n                        onChange={this.handleChange} style={{width:300}}\r\n                        toggleMask feedback={false}/>\r\n                        {isError.password.length > 0 && (\r\n                          <small id=\"password-help\" className=\"p-error p-d-block\">{isError.password}</small>\r\n                        )}\r\n                    </div>\r\n                    <div className=\"resetpasswordText\" onClick={()=>this.props.history.push('/forgot-password')} >Forgot Password</div>\r\n                    <OneButton \r\n                        onClick={this.submitLogin} \r\n                        buttonLabel={\"Login\"}\r\n                        btnShape=\"round\"\r\n                        btnSize=\"large\"\r\n                        buttonStyle={{fontSize:16,marginTop:8}}\r\n                        /> \r\n                    <div style={{marginTop:28,marginBottom:22}}>\r\n                            <div style={{fontSize:14,lineHeight:0,textAlign:'center'}}>Don't have an account?</div>\r\n                    </div>\r\n                    <OneButton \r\n                        onClick={()=>this.props.history.push('/signup')} \r\n                        buttonLabel={\"Create your account\"}\r\n                        btnShape=\"round\"\r\n                        btnSize=\"large\"\r\n                        buttonStyle={{fontSize:16,backgroundColor:'#fff',color:appTheme.primaryColor}}\r\n                        /> \r\n                    <Divider align=\"center\">\r\n                        <b>OR</b>\r\n                    </Divider>\r\n                    <OneButton \r\n                        onClick={this.loginUsingGmail}\r\n                        buttonLabel={\"Sign in with Google\"}\r\n                        btnShape=\"round\"\r\n                        btnSize=\"large\"\r\n                        showIcon={true}\r\n                        buttonStyle={{fontSize:16,backgroundColor:'#4081EC', borderColor:'#4081EC'}}\r\n                        /> \r\n                </div>\r\n     \r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n    \r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        setUserLoginData: obj => {\r\n            dispatch({ type: \"SET_LOGIN_DATA\", data: obj });\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);","F:\\onetruckparts\\src\\containers\\Auth\\ForgotPassword.js",[],"F:\\onetruckparts\\src\\containers\\Auth\\Register.js",["204"],"import React from 'react';\r\n\r\nimport { Toast } from 'primereact/toast';\r\nimport { InputText } from \"primereact/inputtext\";\r\nimport { Password } from 'primereact/password';\r\nimport { Messages } from 'primereact/messages';\r\n\r\nimport OneButton from '../../components/OneButton';\r\nimport AppSpinner from '../../components/AppSpinner';\r\n\r\nimport { formValidation, emailValidation } from '../../utils/Utils';\r\nimport {PRODUCT_BASE_URL} from  '../../utils/Constants';\r\nimport callSerivce from '../../utils/Services';\r\nimport './Auth.css'\r\n\r\n\r\nclass Register extends React.Component {\r\n\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            loading:false,\r\n            formInvalid: false,\r\n            emailId: '',\r\n            password: '',\r\n            confirmPassword:'',\r\n            isError: {\r\n                emailId: '',\r\n                password: '',\r\n                confirmPassword:'',\r\n            }\r\n        }\r\n        this.toastRef = React.createRef();\r\n        this.messageRef = React.createRef();\r\n    }\r\n\r\n\r\n\r\n\r\n    handleChange = (event) => {\r\n        event.preventDefault();\r\n        const { name, value } = event.target;\r\n        let isError = { ...this.state.isError };\r\n        switch (name) {\r\n            case 'emailId':\r\n                isError.emailId =\r\n                    emailValidation.test(value)\r\n                        ? ''\r\n                        : 'Email is not valid!';\r\n                break;\r\n            case 'password':\r\n                isError.password =\r\n                    value.length < 8\r\n                        ? 'password must be minimum  8 characters long!'\r\n                        : '';\r\n                break;\r\n            case 'confirmPassword':\r\n                isError.confirmPassword =\r\n                    value.length ===0\r\n                        ? 'Please enter your confirm password'\r\n                        : '';\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.setState({\r\n            isError,\r\n            [name]: value,\r\n            formInvalid:false\r\n        })\r\n    }\r\n\r\n    submitRegister = () => {\r\n        const { emailId, password, confirmPassword } = this.state;\r\n        this.messageRef.current.clear();\r\n        this.setState({loading:true})\r\n        if (formValidation(this.state.isError, { emailId, password, confirmPassword })) {\r\n            this.setState({ formInvalid: false })\r\n            if (password !== confirmPassword) {\r\n                this.setState({loading:false})\r\n                this.messageRef.current.show({ severity: 'error', summary: '', detail: \"The password don't match.\", sticky: false })\r\n            } else {\r\n                let inpobj = {\r\n                    \"emailId\": emailId,\r\n                    \"password\": password\r\n                }\r\n                let restUrl = `${PRODUCT_BASE_URL}account/signup`;\r\n                callSerivce(inpobj, restUrl, 'POST')\r\n                    .then((res) => {\r\n                        this.setState({loading:false},()=>{\r\n                            if (!res.data.error) {\r\n                                this.showTost('success', 'Success Message', res.data.message);\r\n                                  this.props.history.replace('/login');\r\n                            } else {\r\n                                this.messageRef.current.show({ severity: 'error', summary: '', detail: res.data.message, sticky: false })\r\n                            }\r\n                        }) \r\n                    })\r\n                    .catch((error) => {\r\n                        this.setState({loading:false},()=>{\r\n                            this.messageRef.current.show({ severity: 'error', summary: '', detail: 'Opps, Something went wrong, Try again', sticky: false })\r\n                        })\r\n                    })\r\n            }\r\n           \r\n        } else {\r\n            this.setState({loading:false,formInvalid:true})\r\n            this.messageRef.current.show({ severity: 'error', summary: '', detail: 'Please enter all required fields.', sticky: false })\r\n        }\r\n\r\n    }\r\n\r\n    showTost(type, title, detail) {\r\n        this.toastRef.current.show({ severity: type, summary: title, detail: detail, life: 2000 });\r\n    }\r\n\r\n\r\n    render() {\r\n        const {loading, userName, emailId, formInvalid, password, confirmPassword, isError } = this.state;\r\n        return (\r\n            <div className=\"login-body\">\r\n                <Toast ref={this.toastRef} />\r\n                \r\n                {loading && <AppSpinner /> }\r\n                <div className=\"login-main\">\r\n                    <h1 style={{ textAlign: 'left',fontWeight:'400' }}>Create your account</h1>\r\n                    <Messages ref={this.messageRef} style={{width:300}} />\r\n                    <div className=\"p-field\">\r\n                        <label htmlFor=\"email\" className=\"p-d-block\"><span style={{ color: formInvalid ? 'red' : '' }}>* </span>Email</label>\r\n                        <InputText id=\"email\" value={emailId} name=\"emailId\" required\r\n                            className={(isError.emailId.length > 0 || formInvalid) ? \"p-invalid p-inputtext-sm p-d-block\" : \"p-inputtext-sm p-d-block\"}\r\n                            onChange={this.handleChange} style={{ width: 300 }} />\r\n                        {isError.emailId.length > 0 && (\r\n                            <small id=\"email-help\" className=\"p-error p-d-block\">{isError.emailId}</small>\r\n                        )}\r\n                    </div>\r\n                    <div className=\"p-field\">\r\n                        <label htmlFor=\"password\" className=\"p-d-block\"><span style={{ color: formInvalid ? 'red' : '' }}>* </span>Password</label>\r\n                        <Password id=\"password\" value={password} name=\"password\" required\r\n                            className={(isError.password.length > 0 || formInvalid) ? \"p-invalid p-password p-password-sm\" : \"p-password p-password-sm\"}\r\n                            onChange={this.handleChange} style={{ width: 300 }}\r\n                            toggleMask />\r\n                        {isError.password.length > 0 && (\r\n                            <small id=\"password-help\" className=\"p-error p-d-block\">{isError.password}</small>\r\n                        )}\r\n                    </div>\r\n                    <div className=\"p-field\">\r\n                        <label htmlFor=\"confirmPassword\" className=\"p-d-block\"><span style={{ color: formInvalid ? 'red' : '' }}>* </span>Confirm Password</label>\r\n                        <Password id=\"confirmPassword\" value={confirmPassword} name=\"confirmPassword\" required\r\n                            className={(isError.confirmPassword.length > 0 || formInvalid) ? \"p-invalid p-password p-password-sm\" : \"p-password p-password-sm\"}\r\n                            onChange={this.handleChange} style={{ width: 300 }}\r\n                            toggleMask  feedback={false}/>\r\n                        {isError.confirmPassword.length > 0 && (\r\n                            <small id=\"password-help\" className=\"p-error p-d-block\">{isError.confirmPassword}</small>\r\n                        )}\r\n                    </div>\r\n                    <OneButton \r\n                        onClick={this.submitRegister} \r\n                        buttonLabel={\"Create account\"}\r\n                        btnShape=\"round\"\r\n                        btnSize=\"large\"\r\n                        buttonStyle={{fontSize:16,marginTop:8}}\r\n                        /> \r\n                </div>\r\n\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\n\r\nexport default Register","F:\\onetruckparts\\src\\containers\\Brands\\BrandsPage.js",["205"],"import React, { Fragment } from 'react';\r\n\r\n\r\nimport { InputText } from 'primereact/inputtext';\r\nimport { Skeleton } from 'primereact/skeleton';\r\nimport { Button } from 'primereact/button';\r\nimport serviceCall from '../../utils/Services';\r\nimport { appTheme, PRODUCT_BASE_URL } from '../../utils/Constants';\r\n\r\nimport './BrandsPage.css'\r\n\r\nclass BrandsPage extends React.Component {\r\n\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            brands: [],\r\n            dummyArray:[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15],\r\n            searchInput: '',\r\n            alphabet: '',\r\n            showBrands:true,\r\n            scrolling : false\r\n        }\r\n        this.handleScroll = this.handleScroll.bind(this)\r\n\r\n    }\r\n\r\n    componentWillMount() {\r\n        window.addEventListener('scroll', this.handleScroll, true);\r\n        this.getBrands();\r\n    }\r\n\r\n    componentWillUnmount(){\r\n        window.removeEventListener('scroll', this.handleScroll);\r\n    }\r\n\r\n    handleScroll(event) {\r\n        if (window.scrollY < 200) {\r\n            this.setState({scrolling: false});\r\n        }\r\n        else if (window.scrollY > 200) {\r\n            this.setState({scrolling: true});\r\n        }\r\n    }\r\n\r\n\r\n    getBrands = () => {\r\n\r\n        let restUrl = `${PRODUCT_BASE_URL}prod/brands`\r\n        serviceCall({}, restUrl, 'GET')\r\n            .then((res) => {\r\n                if (!res.error) {\r\n                    this.setState({ brands: res.data, showBrands: false })\r\n                } else {\r\n\r\n                }\r\n            })\r\n            .catch((error) => {\r\n            })\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    goToProductDetailPage() {\r\n        const { selectedPrd } = this.state;\r\n        this.props.history.push('/productdetails/osku:' + selectedPrd.osku, { selectedProduct: selectedPrd })\r\n    }\r\n\r\n    prepareAlphabets = () => {\r\n        let result = [];\r\n        for (let i = 65; i < 91; i++) {\r\n            result.push(\r\n                <Button label={String.fromCharCode(i)} \r\n                onClick={() => this.onAlphabetClick(String.fromCharCode(i))} \r\n                style={(String.fromCharCode(i) === this.state.alphabet) ?{backgroundColor:appTheme.logoTextColor,color:'#fff'} : {}}\r\n                className=\"p-button-outlined p-button-secondary p-m-1\" />\r\n            )\r\n        }\r\n        return result;\r\n    }\r\n\r\n    onAlphabetClick = (value) => {\r\n        this.setState({ alphabet: value })\r\n    }\r\n    elementContainsSearchString = (searchInput, element) => (searchInput ? element.brand.toLowerCase().includes(searchInput.toLowerCase()) : false);\r\n\r\n    filterItems = (itemList) => {\r\n        let result = [];\r\n        const { searchInput, alphabet } = this.state;\r\n        if (itemList && (searchInput || alphabet)) {\r\n            result = itemList.filter((element) => (element.brand.charAt(0).toLowerCase() === alphabet.toLowerCase()) ||\r\n                this.elementContainsSearchString(searchInput, element));\r\n        } else {\r\n            result = itemList || [];\r\n        }\r\n        result = (\r\n            <div className=\"p-grid p-justify-center\">\r\n                {result.map((brand, index) => (\r\n      \r\n                    <div className=\"p-col-4 p-md-2 p-lg-2 p-shadow-2 p-m-md-2\" \r\n                        onClick={()=>this.goToProductPage(brand)}\r\n                        key={index}>\r\n                            <img src={brand.image} style={{ height: 100, width: '100%', objectFit: 'contain' }}\r\n                                onError={(e) => e.target.src = 'https://dublin.anglican.org/cmsfiles/placeholder.png'} />\r\n                            <div style={{ fontWeight: '500', textAlign: 'center' }}>{brand.brand}</div>\r\n                        </div>\r\n             \r\n                ))}\r\n\r\n            </div>)\r\n        return result;\r\n    }\r\n\r\n    goToProductPage(brand){\r\n        this.props.history.push('/products/category:'+ brand.brand+'?brands=true', {catName:brand.brand, fromBrands:true})\r\n    }\r\n\r\n    onSearchInputChange = (e) => {\r\n        this.setState({ searchInput: e.target.value })\r\n    }\r\n\r\n\r\n    render() {\r\n        const { brands, searchInput, scrolling, showBrands ,dummyArray} = this.state;\r\n        const filteredList = this.filterItems(brands);\r\n        return (\r\n            <Fragment >\r\n                <div style={{ margin: '3%' }}>\r\n                        <div style={{ fontSize: 34, fontWeight: '600' }}>\r\n                            Shop By <span style={{ fontWeight: '400' }}>Brand</span>\r\n                        </div>\r\n\r\n                    <div className={(scrolling) ? \"p-m-lg-6 brands-sort-scroll\" : \"p-m-lg-6 brands-sort\" }>\r\n                        {this.prepareAlphabets()}\r\n                    </div>\r\n                    <div className=\"p-m-lg-6 p-m-4\" style={{ display: 'flex', justifyContent: 'center'}}>\r\n                            <span className=\"p-input-icon-right\">\r\n                            <InputText id=\"search\"\r\n                                className=\"p-inputtext-lg p-d-block brands-search\"\r\n                                placeholder=\"Search by brand\"\r\n                                value={searchInput} onChange={this.onSearchInputChange} />\r\n                                 <i className=\"pi pi-search\" style={{color:appTheme.logoTextColor}}/>\r\n                        </span>\r\n                     \r\n                        \r\n                    </div>\r\n                    {!showBrands ?\r\n                    <div>\r\n                        {filteredList}\r\n                    </div> :\r\n                    <div className=\"p-grid p-justify-center \">\r\n                    {dummyArray.map((brand, index) => (\r\n                        <div className=\"p-col-4 p-md-2 p-lg-2 p-shadow-2 p-m-md-2\" key={index}>\r\n                            <Skeleton width=\"100%\" height=\"120px\" />\r\n                        </div>\r\n                    ))}\r\n    \r\n                </div>\r\n                    }\r\n             \r\n                </div>\r\n\r\n\r\n\r\n            </Fragment>\r\n        )\r\n    }\r\n\r\n}\r\n\r\n\r\nexport default BrandsPage;","F:\\onetruckparts\\src\\containers\\Products\\ProductDetailsPage.js",["206","207","208","209","210","211","212","213","214"],"import React, { Fragment } from 'react';\r\n\r\n\r\nimport { connect } from \"react-redux\";\r\nimport { Row, Col } from 'antd';\r\nimport { Galleria } from 'primereact/galleria';\r\nimport { Dropdown } from 'primereact/dropdown';\r\nimport { Skeleton } from 'primereact/skeleton';\r\nimport { DataTable } from 'primereact/datatable';\r\nimport { Column } from 'primereact/column';\r\nimport ReactImageZoom from 'react-image-zoom';\r\n\r\nimport serviceCall from '../../utils/Services';\r\nimport dummyImage from '../../assets/dummy.jpg';\r\nimport noReview from '../../assets/noreview.jpg';\r\n\r\nimport OneButton from '../../components/OneButton';\r\nimport AppSpinner from '../../components/AppSpinner';\r\n\r\nimport ReactSnackBar from \"../../components/ReactSnackBar\";\r\nimport { updateProductToCart, productSaveLater } from '../../utils/commonService';\r\nimport userProfile from '../../utils/UserProfile';\r\nimport { trimString } from '../../utils/Utils';\r\nimport { appTheme, PRODUCT_BASE_URL } from '../../utils/Constants';\r\n\r\nimport { isNotEmpty } from '../../utils/Utils';\r\n\r\nimport './ProductDetailsPage.css';\r\nimport { Divider } from 'primereact/divider';\r\n\r\n\r\nclass ProductDetailsPage extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            selectedQuantity: 1,\r\n            cartLoader: false,\r\n            showLoader: true,\r\n            productDetails: {},\r\n            productImages: [],\r\n            fitmentList: [],\r\n            productFitmentList: [],\r\n            productKitItems:[],\r\n            hidden: false,\r\n            quantities: [\r\n                { name: 1, value: 1 },\r\n                { name: 2, value: 2 },\r\n                { name: 3, value: 3 }\r\n            ],\r\n            Show: false,\r\n            Showing: false,\r\n            toastMsg: ''\r\n        }\r\n        this.productDetails = React.createRef();\r\n        this.Features = React.createRef();\r\n        this.Reviews = React.createRef();\r\n        this.Warranty = React.createRef();\r\n        this.toastRef = React.createRef();\r\n    }\r\n\r\n    componentDidMount() {\r\n        window.scrollTo(0, 0);\r\n        this.getProductDetails();\r\n        this.getUserFitmentList();\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (prevProps.match.params.osku.replace(\":\", \"\") !== this.props.match.params.osku.replace(\":\", \"\")) {\r\n            this.setState({ showLoader: true })\r\n            this.getProductDetails();\r\n            this.getUserFitmentList();\r\n        }\r\n    }\r\n\r\n    getUserFitmentList = () => {\r\n        let restUrl = `${PRODUCT_BASE_URL}fitment/garage`\r\n        serviceCall({}, restUrl, 'GET')\r\n            .then((res) => {\r\n                if (!res.error) {\r\n                    this.setState({ fitmentList: res.data.garage })\r\n                } else {\r\n\r\n                }\r\n            })\r\n            .catch((error) => {\r\n            })\r\n    }\r\n\r\n    getProductDetails = () => {\r\n        let SKU = this.props.match.params.osku.replace(\":\", \"\");\r\n        let restUrl = `${PRODUCT_BASE_URL}prod/details?osku=${SKU}`\r\n        serviceCall({}, restUrl, 'GET')\r\n            .then((res) => {\r\n                if (!res.error) {\r\n                    let productImages = res.data && res.data.files.toString().split(\",\").filter(x => !x.includes(\"pdf\"))\r\n                    this.setState({ productDetails: res.data, productImages: productImages, showLoader: false })\r\n                    if(res.data.iskit){\r\n                        this.getProductKitItems(res.data.kitcomponents)\r\n                    }\r\n                    if (res.data.fitmentOsku) {\r\n                        this.getProductFitment(res.data.fitmentOsku);\r\n                    }\r\n                    \r\n                } else {\r\n\r\n                }\r\n            })\r\n            .catch((error) => {\r\n            })\r\n    }\r\n\r\n    getProductFitment = (fitmentOsku) => {\r\n        let restUrl = `${PRODUCT_BASE_URL}prod/fitments`\r\n        serviceCall({\r\n            \"fitmentOsku\": fitmentOsku\r\n        }, restUrl, 'POST')\r\n            .then((res) => {\r\n                if (!res.error) {\r\n                    this.setState({ productFitmentList: res.data.data })\r\n                } else {\r\n\r\n                }\r\n            })\r\n            .catch((error) => {\r\n            })\r\n    }\r\n\r\n    getProductKitItems=(kitComponents)=>{\r\n        let restUrl = `${PRODUCT_BASE_URL}prod/getKitcomponents?kitcomponents=${kitComponents}`;\r\n\r\n        serviceCall({}, restUrl, 'GET')\r\n            .then((res) => {\r\n                if (!res.error) {\r\n                    this.setState({ productKitItems: res.data.data })\r\n                } else {\r\n\r\n                }\r\n            })\r\n            .catch((error) => {\r\n            })\r\n\r\n    }\r\n\r\n\r\n    addToCart = (product, quantity= this.state.selectedQuantity) => {\r\n        this.setState({ cartLoader: true }, () => {\r\n            updateProductToCart(product, quantity).then((res) => {\r\n                if (!res.error) {\r\n                    this.setState({ cartLoader: false, toastMsg: `Product  added to the cart.` }, () => {\r\n                        this.showToast();\r\n                    })\r\n                    this.props.setUserData({ cartcount: res.data.cartcount, orderTotal: res.data.ordertotal });\r\n                } else {\r\n                    this.setState({ cartLoader: false })\r\n                }\r\n            })\r\n        })\r\n\r\n\r\n    }\r\n\r\n    saveLater = (product) => {\r\n        let userData = userProfile.getUserObj();\r\n        if (userData && userData.emailId) {\r\n            productSaveLater(userData.emailId, product).then((res) => {\r\n                if (!res.error) {\r\n                    this.setState({ cartLoader: false, toastMsg: `Product  added to wishlist` }, () => {\r\n                        this.showToast();\r\n                    })\r\n                } else {\r\n                    this.setState({ cartLoader: false })\r\n                }\r\n            }).catch((error) => {\r\n                this.setState({ cartLoader: false })\r\n            })\r\n        } else {\r\n            this.setState({ cartLoader: false, toastMsg: `Please login to add to the wishlist` }, () => {\r\n                this.showToast();\r\n            })\r\n        }\r\n\r\n\r\n    }\r\n\r\n    showToast = () => {\r\n        if (this.state.Showing) return;\r\n        this.setState({ Show: true, Showing: true });\r\n        setTimeout(() => {\r\n            this.setState({ Show: false, Showing: false, toastMsg: '' });\r\n        }, 2000);\r\n    };\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    itemTemplate(item) {\r\n        const props = { width: 340, height: 340, zoomWidth: 350, img: item, zoomPosition: 'original' };\r\n        if (isNotEmpty(item)) {\r\n            return <ReactImageZoom {...props} />\r\n        } else {\r\n            return <img\r\n                src={item}\r\n                style={{ height: 340, width: '100%', objectFit: 'contain' }}\r\n                onError={(e) => e.target.src = 'https://dublin.anglican.org/cmsfiles/placeholder.png'}\r\n            />\r\n        }\r\n    }\r\n\r\n    thumbnailTemplate(item) {\r\n        if (isNotEmpty(item)) {\r\n            return <img src={item} className=\"thumbnailImage\"\r\n                onError={(e) => e.target.src = 'https://dublin.anglican.org/cmsfiles/placeholder.png'} />\r\n        } else {\r\n            return <img src={dummyImage} className=\"thumbnailImage\"\r\n                onError={(e) => e.target.src = 'https://dublin.anglican.org/cmsfiles/placeholder.png'} />\r\n        }\r\n\r\n    }\r\n\r\n    render() {\r\n        const { selectedQuantity, quantities, productDetails, productImages,\r\n            showLoader, cartLoader, toastMsg, productFitmentList, productKitItems } = this.state;\r\n\r\n        return (\r\n            <Fragment>\r\n                <div className=\"prod-details-main\">\r\n                    {!showLoader ?\r\n                        <Row className=\"prod-details-submain\">\r\n                            <Col xs={24} sm={24} md={24} lg={10} className=\"p-p-lg-3\" >\r\n                                <Galleria value={productImages}\r\n                                    numVisible={3}\r\n                                    circular\r\n                                    showItemNavigators\r\n                                    item={this.itemTemplate} thumbnail={this.thumbnailTemplate}\r\n                                />\r\n                            </Col>\r\n                            <Col xs={24} sm={24} md={24} lg={9} className=\"p-p-4\">\r\n                                <h2 style={{ color: appTheme.secondaryColor, fontWeight: 'bold', lineHeight: 1.4 }} >{productDetails.title}</h2>\r\n                                <h3>{productDetails.short_description_2}</h3>\r\n                                <h2 style={{ color: appTheme.dark2, margin: 0 }}>Key Features:</h2>\r\n                                <ul style={{ paddingInlineStart: 20 }}>\r\n                                    <li className=\"product_li\">Brand Label : {productDetails.brandlabel}</li>\r\n                                    <li className=\"product_li\">Part Number : {productDetails.partnumber}</li>\r\n                                </ul>\r\n                                <h2 style={{ color: appTheme.dark2, margin: 0 }}>Specifications:</h2>\r\n                                <ul style={{ paddingInlineStart: 20 }}>\r\n                                    <li className=\"product_li\">Color : {productDetails.colormode}</li>\r\n                                    <li className=\"product_li\">Dimensions : {parseInt(productDetails.width_inches)}\" *  {parseInt(productDetails.height_inches)}\"</li>\r\n                                    <li className=\"product_li\">Weight :  {productDetails.weight_lb} lb</li>\r\n                                </ul>\r\n                            </Col>\r\n                            <Col xs={24} sm={24} md={12} lg={5} className=\"p-mt-4\" >\r\n                                <div className=\"p-shadow-2 p-p-3  p-mb-3\">\r\n                                    <h2>Price: ${parseFloat(productDetails.price).toFixed(2)}</h2>\r\n                                    <div style={{ display: 'flex', flexDirection: 'row', marginTop: 20, alignItems: 'center' }}>\r\n                                        <div style={{ fontSize: 16, fontWeight: '500', lineHeight: '22px', color: appTheme.dark2 }}>\r\n                                            Quantity :\r\n                                        </div>\r\n                                        <Dropdown value={selectedQuantity} options={quantities}\r\n                                            onChange={(e) => this.setState({ selectedQuantity: e.value })}\r\n                                            optionLabel=\"name\" className=\"p-dropdown-sm p-ml-4\" />\r\n                                    </div>\r\n                                    <OneButton\r\n                                        onClick={() => this.addToCart(productDetails)}\r\n                                        buttonLabel={\"Add to cart\"}\r\n                                        btnShape=\"round\"\r\n                                        btnSize=\"large\"\r\n                                        buttonStyle={{\r\n                                            fontSize: 16, marginTop: 26,\r\n                                            backgroundColor: appTheme.logoTextColor,\r\n                                            borderColor: appTheme.logoTextColor\r\n                                        }}\r\n                                    />\r\n                                    <OneButton\r\n                                        onClick={() => this.saveLater(productDetails)}\r\n                                        buttonLabel={\"Save for later\"}\r\n                                        btnShape=\"round\"\r\n                                        btnSize=\"large\"\r\n                                        buttonStyle={{ fontSize: 16, marginTop: 26, marginBottom: 14 }}\r\n                                    />\r\n                                </div>\r\n                            </Col>\r\n                        </Row> :\r\n                        <Row className=\"prod-details-submain\">\r\n                            <Col xs={24} sm={24} md={24} lg={10} className=\"p-p-lg-3\" >\r\n                                <Skeleton height=\"340px\" width=\"100%\" />\r\n                            </Col>\r\n                            <Col xs={24} sm={24} md={24} lg={9} className=\"p-p-4\">\r\n                                <Skeleton width=\"100%\" className=\"p-mb-4 p-p-2\" />\r\n                                <Skeleton width=\"90%\" className=\"p-mb-4 p-p-4\" />\r\n                                <Skeleton width=\"60%\" height=\"250px\" className=\"p-mb-4 p-p-4\" />\r\n                            </Col>\r\n                            <Col xs={24} sm={24} md={12} lg={5} className=\"p-mt-4\" >\r\n                                <Skeleton width=\"100%\" className=\"p-mb-4 p-p-2\" />\r\n                                <Skeleton width=\"100%\" className=\"p-mb-4 p-p-6\" />\r\n                            </Col>\r\n                        </Row>\r\n                    }\r\n                    {/* Kit Items */}\r\n                    {productKitItems.length !==0 &&\r\n                    <div className=\"p-p-lg-3\" >\r\n                        <Divider/>\r\n                        <h2>Product Kits</h2>\r\n                        <Row align=\"middle\">\r\n                        {productKitItems.map((kit)=>(\r\n                            <Col xs={24} sm={24} md={24} lg={5} className=\"p-p-lg-3 p-shadow-2 p-m-4\" style={{display:'flex', flexDirection:'column', justifyContent:'center', alignItems:'center'}}>\r\n                                <img src={kit.image} className=\"kitImage\"\r\n                                onError={(e) => e.target.src = 'https://dublin.anglican.org/cmsfiles/placeholder.png'} />\r\n                                <h3>{trimString(kit.title, 60)}</h3>\r\n                                <h4 style={{alignSelf:'flex-start', color:appTheme.logoTextColor}}>Quantity: {kit.setquantity}</h4>\r\n                                <h4 style={{alignSelf:'flex-start', color:appTheme.secondaryColor}}>Price: ${kit.price}</h4>\r\n                                <OneButton\r\n                                        onClick={() => this.addToCart(kit, kit.setquantity)}\r\n                                        buttonLabel={\"Add to cart\"}\r\n                                        btnShape=\"round\"\r\n                                        btnSize=\"large\"\r\n                                        buttonStyle={{\r\n                                            fontSize: 16, marginTop: 26,\r\n                                            backgroundColor: appTheme.logoTextColor,\r\n                                            borderColor: appTheme.logoTextColor\r\n                                        }}\r\n                                    />\r\n                            </Col>\r\n                        ))}\r\n                        </Row>\r\n                    </div>}\r\n                    {!showLoader ?\r\n                        <div className=\"product_navbar p-shadow-3\">\r\n                            <a onClick={() => this.productDetails.current.scrollIntoView({ behavior: 'smooth', block: 'start' })}>Product Details</a>\r\n                            <a onClick={() => this.Features.current.scrollIntoView({ behavior: 'smooth', block: 'start' })}>Features</a>\r\n                            <a onClick={() => this.Features.current.scrollIntoView({ behavior: 'smooth', block: 'start' })}>Compatibility</a>\r\n                            <a onClick={() => this.Reviews.current.scrollIntoView({ behavior: 'smooth', block: 'start' })}>Reviews</a>\r\n                            <a onClick={() => this.Warranty.current.scrollIntoView({ behavior: 'smooth', block: 'start' })}>Warranty</a>\r\n                        </div> :\r\n                        <div className=\"p-shadow-3\">\r\n                            <Skeleton width=\"100%\" className=\"p-mb-4 p-p-4\" />\r\n                        </div>\r\n                    }\r\n                    {!showLoader ?\r\n                        <div className=\"prod-details-nav-item\">\r\n                            <section ref={this.productDetails}>\r\n                                <div className=\"product_navbar_title\">Product Details</div>\r\n                                <div className=\"product_navbar_desc\">\r\n                                    {productDetails.description}\r\n                                </div>\r\n                            </section>\r\n                            <section ref={this.Features}>\r\n                                <div className=\"product_navbar_title\">Features</div>\r\n\r\n                                <ul class=\"striped-list\">\r\n                                    <li>Brand Label : {productDetails.brandlabel}</li>\r\n                                    <li>Category : {productDetails.category}</li>\r\n                                    <li>Dimensions : {parseInt(productDetails.width_inches)}\" *  {parseInt(productDetails.height_inches)}\"</li>\r\n                                    <li>Color Mode : {productDetails.colormode}</li>\r\n                                    <li>Weight :  {productDetails.weight_lb} lb</li>\r\n                                </ul>\r\n                                <ul class=\"striped-list p-mt-3\">\r\n                                    {productDetails.featuredTexts && productDetails.featuredTexts.length !== 0 &&\r\n                                        productDetails.featuredTexts.map((text, index) => (\r\n                                            <li>{index + 1}. {' '}{text}</li>\r\n                                        ))}\r\n                                </ul>\r\n                            </section>\r\n                            <section>\r\n                                <div className=\"product_navbar_title\">Compatibility</div>\r\n                                <DataTable\r\n                                    emptyMessage={\r\n                                        <div style={{ display: 'grid', justifyContent: 'center' }}>\r\n                                            <h3 style={{ textAlign: 'center', color: appTheme.logoTextColor, fontWeight: '800', }}>No Fitment Data</h3>\r\n                                        </div>\r\n                                    }\r\n                                    loading={false}\r\n                                    value={productFitmentList}>\r\n                                    <Column field=\"modelname\" header=\"Model name\" />\r\n                                    <Column field=\"year\" header=\"Year\" />\r\n                                    <Column field=\"bodytype\" header=\"Body Type\" />\r\n                                    <Column field=\"engbase\" header=\"Engine base\" />\r\n                                </DataTable>\r\n                            </section>\r\n                            <section ref={this.Reviews}>\r\n                                <div className=\"product_navbar_title\">Reviews</div>\r\n                                <div style={{ display: 'flex', flexDirection: 'column', justifyContent: 'center', alignItems: 'center' }}>\r\n                                    <img src={noReview} alt=\"noReview\" style={{ height: 160, alignSelf: 'center' }} />\r\n                                    <h2 style={{ textAlign: 'center', color: appTheme.logoTextColor, fontWeight: '800', }}>No Active Reviews</h2>\r\n                                </div>\r\n                            </section>\r\n                            <section ref={this.Warranty}>\r\n                                <div className=\"product_navbar_title\">Warranty</div>\r\n                                <h2 style={{ color: appTheme.secondaryColor, fontWeight: 'bold' }}>\r\n                                    {productDetails.warranty ? productDetails.warranty : 'One Year Fixed Warranty'}</h2>\r\n                            </section>\r\n                        </div> :\r\n                        <div className=\"prod-details-nav-item\">\r\n                            <Skeleton width=\"100%\" height=\"180px\" className=\"p-mb-4 p-p-4\" />\r\n                            <Skeleton width=\"100%\" height=\"180px\" className=\"p-mb-4 p-p-4\" />\r\n                            <Skeleton width=\"100%\" height=\"180px\" className=\"p-mb-4 p-p-4\" />\r\n                            <Skeleton width=\"100%\" height=\"180px\" className=\"p-mb-4 p-p-4\" />\r\n                        </div>}\r\n                </div>\r\n                {cartLoader && <AppSpinner />}\r\n                <ReactSnackBar Show={this.state.Show}>\r\n                    {toastMsg}\r\n                </ReactSnackBar>\r\n            </Fragment>\r\n        )\r\n    }\r\n\r\n}\r\n\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n\r\n    }\r\n}\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        setUserData: obj => {\r\n            dispatch({ type: \"SET_APP_DATA\", data: obj });\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ProductDetailsPage);\r\n\r\n\r\n\r\n\r\n\r\n","F:\\onetruckparts\\src\\containers\\Home\\HomePage.js",["215","216","217","218","219"],"import React, { Fragment } from 'react';\r\n\r\nimport { connect } from \"react-redux\";\r\nimport { Row, Col, Select, Input } from 'antd';\r\nimport { Carousel } from 'primereact/carousel';\r\nimport { Dialog } from 'primereact/dialog';\r\nimport { Skeleton } from 'primereact/skeleton';\r\n\r\nimport OneButton from '../../components/OneButton';\r\nimport Slider from '../../components/Slider';\r\nimport serviceCall from '../../utils/Services';\r\n\r\n\r\nimport truckimg1 from '../../assets/truckimg1.jpg';\r\nimport truckimg2 from '../../assets/truckimg2.jpg';\r\nimport truckimg3 from '../../assets/truckimg3.jpg';\r\nimport ReactSnackBar from \"../../components/ReactSnackBar\";\r\nimport { trimString } from '../../utils/Utils';\r\nimport { updateProductToCart } from '../../utils/commonService';\r\nimport { PRODUCT_BASE_URL, appTheme, deviceWidth } from '../../utils/Constants';\r\n\r\n\r\nimport { appStore } from '../../App';\r\n\r\nimport './HomePage.css'\r\n\r\nconst { Option } = Select;\r\nclass HomePage extends React.Component {\r\n\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            sliderList: [],\r\n            dummyArray: [1, 2, 3, 4, 5, 6],\r\n            featuredProducts: [],\r\n            showDilalog: false,\r\n            selectedPrd: {},\r\n            showFeaturedProducts: true,\r\n            Show: false,\r\n            Showing: false,\r\n            toastMsg: ''\r\n        }\r\n        this.updateWindowDimensions = this.updateWindowDimensions.bind(this);\r\n        this.responsiveOptions = [\r\n            {\r\n                breakpoint: '1024px',\r\n                numVisible: 4,\r\n                numScroll: 2\r\n            },\r\n            {\r\n                breakpoint: '768px',\r\n                numVisible: 3,\r\n                numScroll: 1\r\n            },\r\n            {\r\n                breakpoint: '480px',\r\n                numVisible: 2,\r\n                numScroll: 1\r\n            }\r\n        ]\r\n    }\r\n\r\n    componentWillMount() {\r\n        window.addEventListener(\"resize\", this.updateWindowDimensions);\r\n        this.getSlider();\r\n        this.getProductsByCategory();\r\n    }\r\n\r\n\r\n    componentWillUnmount() {\r\n        window.removeEventListener(\"resize\", this.updateWindowDimensions)\r\n    }\r\n\r\n    updateWindowDimensions() {\r\n        let width = window.innerWidth;\r\n        if (width > deviceWidth.LAPTOP) {\r\n            this.setState({ numVisible: 5 })\r\n        } else if (width > deviceWidth.TAB) {\r\n            this.setState({ numVisible: 4 })\r\n        } else {\r\n            this.setState({ numVisible: 2 })\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n    getProductsByCategory = () => {\r\n        let restUrl = `${PRODUCT_BASE_URL}prod/home?hideCategoryBlocks=true`\r\n        serviceCall({}, restUrl, 'GET')\r\n            .then((res) => {\r\n                if (!res.error) {\r\n                    this.setState({ featuredProducts: res.data.data, showFeaturedProducts: false })\r\n                } else {\r\n\r\n                }\r\n            })\r\n            .catch((error) => {\r\n            })\r\n    }\r\n\r\n\r\n\r\n    getSlider() {\r\n        let sliders = [\r\n            { id: 1, imgurl: truckimg1 },\r\n            { id: 2, imgurl: truckimg2 },\r\n            { is: 3, imgurl: truckimg3 }\r\n        ];\r\n        this.setState({ sliderList: sliders })\r\n    }\r\n\r\n    renderProductTemplate(product) {\r\n        return (\r\n            <div className=\"product-item\" onClick={() => this.displayDialog(product)}>\r\n                <div className=\"product-item-content\">\r\n                    <div className=\"p-mb-3\">\r\n                        <img src={product.image}\r\n                            onError={(e) => e.target.src = 'https://dublin.anglican.org/cmsfiles/placeholder.png'}\r\n                            alt={product.name} className=\"product-image grow \" />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    displayDialog = (product) => {\r\n        this.setState({ showDilalog: true, selectedPrd: product })\r\n    }\r\n\r\n    closeDialog = () => {\r\n        this.setState({ showDilalog: false })\r\n    }\r\n\r\n    goToProductDetailPage() {\r\n        const { selectedPrd } = this.state;\r\n        this.props.history.push('/productdetails/osku:' + selectedPrd.osku, { selectedProduct: selectedPrd })\r\n    }\r\n\r\n    goToBrandsPage = () => {\r\n        this.props.history.push('/brands')\r\n    }\r\n\r\n    addToCart = (product) => {\r\n        updateProductToCart(product, 1).then((resp) => {\r\n            if (!resp.data.error) {\r\n                this.setState({ showDilalog: false, toastMsg: `Product  added to the cart.` }, () => {\r\n                    this.showToast();\r\n                })\r\n                this.props.setUserData({ cartcount: resp.data.cartcount, orderTotal: resp.data.ordertotal });\r\n            } else {\r\n                this.setState({ showDilalog: false, toastMsg: resp.data.message }, () => {\r\n                    this.showToast();\r\n                })\r\n            }\r\n\r\n        })\r\n    }\r\n\r\n    showToast = () => {\r\n        if (this.state.Showing) return;\r\n        this.setState({ Show: true, Showing: true });\r\n        setTimeout(() => {\r\n            this.setState({ Show: false, Showing: false });\r\n        }, 2000);\r\n    };\r\n\r\n\r\n    render() {\r\n        const { sliderList, featuredProducts, showDilalog, selectedPrd, showFeaturedProducts, dummyArray, toastMsg } = this.state;\r\n        return (\r\n            <Fragment>\r\n                <Slider data={sliderList} goToBrandsPage={this.goToBrandsPage.bind(this)} />\r\n                {showFeaturedProducts ?\r\n                    <div className=\"homePage-style\">\r\n                        {dummyArray.map((cat) => (\r\n                            <div className=\"carousel-featured-products\" style={{ paddingBottom: '0.4%' }}>\r\n                                <Skeleton width=\"100%\" height=\"240px\" />\r\n                            </div>\r\n                        ))}\r\n                    </div> :\r\n                    <div className=\"homePage-style\">\r\n                        {featuredProducts.length !== 0 && featuredProducts.map((cat, index) => (\r\n                            <div key={`cat-${index}`}>\r\n                                {cat.sectionType === \"grid\" ?\r\n                                    <div className=\"carousel-featured-products-grid\">\r\n\r\n                                        <div style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\r\n                                            {cat.results.map((product, index) => (\r\n                                                <>\r\n                                                    {product.blocktype === \"html\" ?\r\n                                                        <div className=\"p-col-6 p-d-flex p-d-row p-ai-center p-jc-center\"\r\n                                                            style={index === 1 ? { borderLeft: \"2px solid #EAEDED\" } : {}}\r\n                                                        >\r\n                                                            <div dangerouslySetInnerHTML={{ __html: product.value }} />\r\n                                                        </div> :\r\n                                                        <div className=\"p-col-6 p-d-flex  p-flex-row p-flex-wrap p-ai-center p-jc-center\"\r\n                                                            style={index === 1 ? { borderLeft: \"2px solid #EAEDED\" } : {}}\r\n                                                            onClick={() => this.displayDialog(product.items)}\r\n                                                        >\r\n                                                            <div className=\"cat-grid-title\">{trimString(product.items.title, 50)}</div>\r\n                                                            <img src={product.items.image}\r\n                                                                className=\"cat-grid-image\"\r\n                                                                onError={(e) => e.target.src = 'https://dublin.anglican.org/cmsfiles/placeholder.png'}\r\n                                                                alt={product.items.title} />\r\n                                                        </div>}\r\n                                                </>\r\n                                            ))}\r\n                                        </div>\r\n                                    </div> :\r\n                                    <div className=\"carousel-featured-products\">\r\n                                        <Carousel value={cat.items} numVisible={5} numScroll={2} responsiveOptions={this.responsiveOptions} id={\"cat-carousel\"}\r\n                                            itemTemplate={this.renderProductTemplate.bind(this)} header={<div className=\"cat-scoll-header\">{cat.heading}</div>} />\r\n                                    </div>}\r\n                            </div>\r\n                        ))}\r\n                    </div>}\r\n                <Dialog visible={showDilalog} closable={false} header={null}\r\n                    onHide={() => this.closeDialog()} modal className=\"home-prd-dialog\">\r\n                    <div style={{ position: 'absolute', top: 16, left: 14, cursor: \"pointer\",backgroundColor:'#fff' }} onClick={() => this.closeDialog()}>\r\n                        <i className=\"pi pi-times\" style={{ fontSize: 22, fontWeight: 'bold', color: appTheme.primaryColor,padding: 4 }}></i>\r\n                    </div>\r\n                    <div className=\"p-grid\">\r\n                        <div className=\"p-col-12 p-md-12 p-lg-5 p-xl-4 p-col-align-center\" style={{ justifyContent: 'center' }}>\r\n                            <img src={selectedPrd.image}\r\n                                onError={(e) => e.target.src = 'https://dublin.anglican.org/cmsfiles/placeholder.png'}\r\n                                alt={selectedPrd.title} />\r\n                        </div>\r\n\r\n                        <div className=\"p-col-12 p-md-12 p-lg-7 p-xl-8 p-col-align-center p-justify-center\">\r\n                            <h3>{trimString(selectedPrd.title, 70)}</h3>\r\n                            <p style={{marginBottom: 12, color:appTheme.logoTextColor }}>$ {selectedPrd.price}</p>\r\n                            <OneButton\r\n                                onClick={() => this.addToCart(selectedPrd)}\r\n                                buttonLabel={\"Add to cart\"}\r\n                                btnSize=\"large\"\r\n                                btnShape=\"round\"\r\n                                buttonStyle={{\r\n                                    fontSize: 16, width: 150, height: 40, marginRight: 10,\r\n                                    marginTop: 4\r\n\r\n                                }}\r\n                            />\r\n                            <OneButton\r\n                                onClick={() => this.goToProductDetailPage()}\r\n                                buttonLabel={\"Product details\"}\r\n                                btnSize=\"large\"\r\n                                btnShape=\"round\"\r\n                                buttonStyle={{\r\n                                    fontSize: 16, backgroundColor: appTheme.logoTextColor, marginTop: 4,\r\n                                    borderColor: appTheme.logoTextColor, width: 200, height: 40\r\n\r\n                                }}\r\n                            />\r\n                        </div>\r\n\r\n                    </div>\r\n                </Dialog>\r\n                <ReactSnackBar Show={this.state.Show}>\r\n                    {toastMsg}\r\n                </ReactSnackBar>\r\n\r\n            </Fragment>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        userdata: state.userData\r\n    }\r\n}\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        setUserData: obj => {\r\n            dispatch({ type: \"SET_APP_DATA\", data: obj });\r\n        }\r\n    }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(HomePage);\r\n\r\n","F:\\onetruckparts\\src\\containers\\Products\\ProductsList.js",["220"],"import React, { Fragment } from 'react';\r\n\r\nimport { connect } from \"react-redux\";\r\nimport { Divider } from 'primereact/divider';\r\nimport { Toast } from 'primereact/toast';\r\nimport { Checkbox } from 'primereact/checkbox';\r\nimport { Paginator } from 'primereact/paginator';\r\n\r\nimport serviceCall from '../../utils/Services';\r\nimport noProductsFound from '../../assets/No_Product_Found.png';\r\n\r\nimport { updateProductToCart, productSaveLater } from '../../utils/commonService';\r\nimport { appTheme, PRODUCT_BASE_URL , deviceWidth} from '../../utils/Constants';\r\nimport { isNotEmpty } from '../../utils/Utils';\r\n\r\n\r\nimport ReactSnackBar from \"../../components/ReactSnackBar\";\r\nimport ProductCard from '../../components/ProductCard/ProductCard';\r\nimport AppSpinner from '../../components/AppSpinner';\r\n\r\nimport './ProductList.css';\r\n\r\nclass ProductsList extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            paginationFirst: 0,\r\n            pageNum: 0,\r\n            pageSize: 24,\r\n            totalProducts: 0,\r\n            productsList: [],\r\n            dummyProductsList: [1, 2, 3, 4, 5, 6, 7, 8],\r\n            displayItems: [24, 48, 72],\r\n            showLoader: true,\r\n            cartLoader: false,\r\n            fromBrands: false,\r\n            categories: [],\r\n            filterName:\"\",\r\n            productFilters: [],\r\n            selectedFilters:[],\r\n            defaultType: \"\",\r\n            Show: false,\r\n            Showing: false,\r\n            toastMsg: '',\r\n            isLargeDevice:true\r\n        }\r\n        this.toastRef = React.createRef();\r\n        this.updateCategory = true;\r\n        this.updateWindowDimensions = this.updateWindowDimensions.bind(this);\r\n    }\r\n\r\n    componentWillMount() {\r\n        window.scrollTo(0, 0);\r\n        window.addEventListener(\"resize\", this.updateWindowDimensions);\r\n        this.updateCategory = true;\r\n        let brand = new URLSearchParams(this.props.location.search).get(\"brands\");\r\n        let checkBrand = isNotEmpty(brand) ? brand : false;\r\n        let defaultType = this.props.match.params.type.replace(\":\", \"\");\r\n        if(checkBrand){\r\n            this.getCategory();\r\n        }\r\n        this.setState({ fromBrands: checkBrand, defaultType }, () => {\r\n            this.getProductsList();\r\n        })\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        window.removeEventListener(\"resize\", this.updateWindowDimensions)\r\n    }\r\n\r\n    \r\n    updateWindowDimensions() {\r\n        let width = window.innerWidth;\r\n        if (width > deviceWidth.LAPTOP) {\r\n            this.setState({ isLargeDevice: true })\r\n        } else if (width > deviceWidth.TAB) {\r\n            this.setState({ isLargeDevice: true })\r\n        } else {\r\n            this.setState({ isLargeDevice: false})\r\n        }\r\n\r\n    }\r\n\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (prevProps.match.params.type.replace(\":\", \"\") !== this.props.match.params.type.replace(\":\", \"\")) {\r\n            window.scrollTo(0, 0);\r\n            let defaultType = this.props.match.params.type.replace(\":\", \"\");\r\n            let brand = new URLSearchParams(this.props.location.search).get(\"brands\");\r\n            let checkBrand = isNotEmpty(brand) ? brand : false;\r\n            this.setState({ showLoader: true, pageNum: 0,paginationFirst: 0, pageSize: 24, defaultType, fromBrands: checkBrand }, () => {\r\n                this.getProductsList();\r\n            })\r\n        }\r\n    }\r\n\r\n    getCategory = () => {\r\n        let allCategories = this.props.getCategories;\r\n        let productFilters = allCategories.map(a => a.name);\r\n        let removeDuplicateFilters = [...new Set(productFilters)]\r\n        this.setState({ categories: this.props.getCategories, productFilters: removeDuplicateFilters }, () => {\r\n        })\r\n\r\n    }\r\n\r\n    getProductsList = () => {\r\n        const { pageNum, pageSize, fromBrands, defaultType, selectedFilters } = this.state;\r\n        // If sort by only brand then send brand\r\n        // If sort by only category then send category\r\n        // If sort by both send both\r\n        let filter = \"\";\r\n        if (fromBrands) {\r\n            if (selectedFilters.length !==0) {\r\n                filter = `&brand=${encodeURIComponent(defaultType)}&category=${selectedFilters}`;\r\n            } else {\r\n                filter = `&brand=${encodeURIComponent(defaultType)}`;\r\n            }\r\n        } else {\r\n            if(selectedFilters.length !==0){\r\n                filter = `&category=${defaultType}&brand=${selectedFilters}`;\r\n            }else{\r\n                filter = `&category=${defaultType}`;\r\n            }\r\n            \r\n        }\r\n\r\n        let restUrl = encodeURI(`${PRODUCT_BASE_URL}prod?db=mainDB&page=${pageNum}&limit=${pageSize}${filter}`);\r\n        serviceCall({}, restUrl, 'GET')\r\n            .then((res) => {\r\n                if (!res.error) {\r\n                    if (fromBrands) {\r\n                        this.setState({ productsList: res.data.products, totalProducts: res.data.total, \r\n                            filterName: 'Categories', showLoader: false })\r\n                    }else{\r\n                        this.setState({ productsList: res.data.products, totalProducts: res.data.total, \r\n                            filterName: res.data.filters[0].name,\r\n                            productFilters: res.data.filters[0].data, showLoader: false })\r\n                    }\r\n\r\n                } else {\r\n\r\n                }\r\n            })\r\n            .catch((error) => {\r\n            })\r\n    }\r\n\r\n\r\n\r\n\r\n    displayItems = (item) => {\r\n        this.setState({ pageSize: item, showLoader: true }, () => {\r\n            this.getProductsList();\r\n        })\r\n    }\r\n\r\n    onChangePagination = (pageNum, paginationFirst, pageSize) => {\r\n        this.setState({ pageNum: pageNum, paginationFirst: paginationFirst, pageSize: pageSize, showLoader: true }, () => {\r\n            window.scrollTo(0, 0);\r\n            this.getProductsList();\r\n        })\r\n    }\r\n\r\n\r\n    openProductDetail = (selectedProduct) => {\r\n        this.props.history.push('/productdetails/osku:' + selectedProduct.osku)\r\n    }\r\n\r\n    addToCart = (product) => {\r\n        this.setState({ cartLoader: true }, () => {\r\n            updateProductToCart(product, 1).then((res) => {\r\n                if (!res.data.error) {\r\n                    this.setState({ cartLoader: false, toastMsg: `Product  added to the cart.` }, () => {\r\n                        this.showToast();\r\n                    })\r\n                    this.props.setUserData({ cartcount: res.data.cartcount, orderTotal: res.data.ordertotal });\r\n                } else {\r\n                    this.setState({ cartLoader: false })\r\n                }\r\n            }).catch((error) => {\r\n                this.setState({ cartLoader: false })\r\n            })\r\n        })\r\n\r\n    }\r\n\r\n    saveLater = (product) => {\r\n        if (this.props.loginData && this.props.loginData.emailId) {\r\n            productSaveLater(this.props.loginData.emailId, product).then((res) => {\r\n                if (!res.error) {\r\n                    this.setState({ cartLoader: false, toastMsg: `Product  added to wishlist` }, () => {\r\n                        this.showToast();\r\n                    })\r\n                } else {\r\n                    this.setState({ cartLoader: false })\r\n                }\r\n            }).catch((error) => {\r\n                this.setState({ cartLoader: false })\r\n            })      \r\n        } else {\r\n            this.setState({ cartLoader: false, toastMsg: `Please login to add to wishlist` }, () => {\r\n                this.showToast();\r\n            })\r\n        }\r\n\r\n\r\n    }\r\n\r\n    showToast = () => {\r\n        if (this.state.Showing) return;\r\n        this.setState({ Show: true, Showing: true });\r\n        setTimeout(() => {\r\n            this.setState({ Show: false, Showing: false, toastMsg: '' });\r\n        }, 2000);\r\n    };\r\n\r\n    onFiltersChange=(e)=> {\r\n        let selectedFilters = [...this.state.selectedFilters];\r\n        if (e.checked) {\r\n            selectedFilters.push(e.value);\r\n        }\r\n        else {\r\n            for (let i = 0; i < selectedFilters.length; i++) {\r\n                const selectedFilter = selectedFilters[i];\r\n\r\n                if (selectedFilter == e.value) {\r\n                    selectedFilters.splice(i, 1);\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        this.setState({ selectedFilters, pageNum: 1, showLoader: true },()=>{\r\n            this.getProductsList();\r\n        });\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        const { pageSize, paginationFirst, displayItems, productsList, dummyProductsList, totalProducts, showLoader,\r\n            cartLoader, filterName, productFilters,selectedFilters, \r\n            toastMsg, isLargeDevice } = this.state;\r\n\r\n        const pageTemplate = {\r\n            layout: (isLargeDevice) ?\r\n            'CurrentPageReport FirstPageLink  PrevPageLink PageLinks NextPageLink LastPageLink  RowsPerPageDropdown' : \r\n            'CurrentPageReport PrevPageLink NextPageLink RowsPerPageDropdown',\r\n            'CurrentPageReport': (options) => {\r\n                return (\r\n                    <span style={{ color: appTheme.primaryColor, userSelect: 'none', width: '160px', textAlign: 'center' }}>\r\n                        {options.first} - {options.last} of {options.totalRecords}\r\n                    </span>\r\n                )\r\n            }\r\n        };\r\n\r\n        return (\r\n            <Fragment>\r\n                <Toast ref={this.toastRef} />\r\n                <div className=\"p-grid maindiv\" >\r\n                    {isLargeDevice &&\r\n                    <div className=\"p-col-2 p-mt-3\" >\r\n                            <div className=\"filter-vl\">\r\n                                <div className='subcat-list-item'>\r\n                                    <h3 style={{ fontWeight: 700, color: appTheme.logoTextColor, textTransform: 'capitalize' }}>\r\n                                        {filterName}\r\n                                    </h3>\r\n                                </div>\r\n                                {productFilters.length !== 0 && productFilters.map((brand) => (\r\n                                <div className=\"p-field-checkbox\">\r\n                                    <Checkbox inputId={brand} value={brand}  name=\"brand\"\r\n                                        checked={selectedFilters.some((item) => item === brand)} \r\n                                        onChange={this.onFiltersChange} />\r\n                                    <label htmlFor={brand} className=\"filter-label\">{brand}</label>\r\n                                </div>))}\r\n                            </div>\r\n                    </div> }\r\n                    <div className={isLargeDevice ? \"p-col-10\" : \"p-col-12\" }>\r\n                        <Divider />\r\n                        {showLoader ?\r\n                            <div>\r\n                                <div style={{ display: 'flex', justifyContent: 'center', flexWrap: 'wrap' }} >\r\n                                    {dummyProductsList.map((product) => (\r\n                                        <ProductCard\r\n                                            showSkeletion={true}\r\n                                            product={product}\r\n                                            openProductDetail={this.openProductDetail.bind(this)}\r\n                                            addToCart={this.addToCart.bind(this)}\r\n                                            saveLater={this.saveLater.bind(this)}\r\n                                        />\r\n                                    )\r\n                                    )}\r\n                                </div>\r\n                            </div> :\r\n                            <div>\r\n                                {productsList.length !== 0 ?\r\n                                    <div style={{ display: 'flex', justifyContent: 'center', flexWrap: 'wrap' }} >\r\n                                        {productsList.map((product) => (\r\n                                            <ProductCard\r\n                                                showSkeletion={false}\r\n                                                product={product}\r\n                                                openProductDetail={this.openProductDetail.bind(this)}\r\n                                                addToCart={this.addToCart.bind(this)}\r\n                                                saveLater={this.saveLater.bind(this)}\r\n                                            />\r\n                                        )\r\n                                        )}\r\n                                    </div> :\r\n                                    <div style={{ display: 'grid', justifyContent: 'center' }}>\r\n                                        <img src={noProductsFound} alt=\"noProductsFound\" style={{ height: 200, alignSelf: 'center' }} />\r\n                                    </div>}\r\n                            </div>}\r\n                        <Divider />\r\n                        {!showLoader &&\r\n                            <div style={{\r\n                                display: 'flex', flexDirection: 'row',\r\n                                justifyContent: 'center', alignItems: 'center',\r\n                                marginTop: 20,\r\n                            }}>\r\n                                <Paginator\r\n                                    first={paginationFirst}\r\n                                    rows={pageSize}\r\n                                    totalRecords={totalProducts}\r\n                                    rowsPerPageOptions={displayItems}\r\n                                    template={pageTemplate}\r\n                                    onPageChange={(e) => this.onChangePagination(e.page, e.first, e.rows)}></Paginator>\r\n                            </div>\r\n                        }\r\n                    </div>\r\n                </div>\r\n                {cartLoader && <AppSpinner />}\r\n                <ReactSnackBar Show={this.state.Show}>\r\n                    {toastMsg}\r\n                </ReactSnackBar>\r\n            </Fragment>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        userdata: state.userData,\r\n        loginData: state.userLoginData,\r\n        getCategories: state.getCategories\r\n    }\r\n}\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        setUserData: obj => {\r\n            dispatch({ type: \"SET_APP_DATA\", data: obj });\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ProductsList);\r\n","F:\\onetruckparts\\src\\containers\\Cart\\CartPage.js",[],"F:\\onetruckparts\\src\\containers\\Products\\SearchProductsList.js",["221","222","223"],"import React, { Fragment } from 'react';\r\n\r\nimport { message, Pagination, Empty } from 'antd';\r\nimport { Divider } from 'primereact/divider';\r\nimport { Paginator } from 'primereact/paginator';\r\nimport { Toast } from 'primereact/toast';\r\nimport serviceCall from '../../utils/Services';\r\n\r\nimport { updateProductToCart, productSaveLater } from '../../utils/commonService';\r\nimport { appTheme, PRODUCT_BASE_URL } from '../../utils/Constants';\r\nimport {isNotEmpty, showToastMessage} from '../../utils/Utils';\r\nimport { connect } from \"react-redux\";\r\n\r\n\r\nimport ReactSnackBar from \"../../components/ReactSnackBar\";\r\nimport ProductCard from '../../components/ProductCard/ProductCard';\r\nimport AppSpinner from '../../components/AppSpinner';\r\n\r\nimport './ProductList.css';\r\n\r\nclass SearchProductsList extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            paginationFirst: 0,\r\n            pageNum: 0,\r\n            pageSize: 30,\r\n            totalProducts:0,\r\n            productsList: [],\r\n            displayItems: [30, 45, 60, 75, 90],\r\n            showLoader:true,\r\n            cartLoader:false,\r\n            categories:[],\r\n            selectedCat:false,\r\n            selectedCategory:{},\r\n            Show: false,\r\n            Showing: false,\r\n            toastMsg: '',\r\n            fitment:''\r\n        }\r\n        this.toastRef = React.createRef();\r\n        this.updateCategory = true\r\n    }\r\n\r\n    componentWillMount() {\r\n        this.getCategory();\r\n        this.updateCategory = true;\r\n        let fitment = new URLSearchParams(this.props.location.search).get(\"fitment\");\r\n        this.setState({fitment: isNotEmpty(fitment) ? fitment : \"\"},()=>{\r\n            this.getProductsList();\r\n        })\r\n    }\r\n\r\n\r\n    componentDidUpdate(prevProps){\r\n        if(prevProps.match.params.val.replace(\":\", \"\") !== this.props.match.params.val.replace(\":\", \"\")){\r\n            this.setState({showLoader:true,pageNum:1})\r\n            this.getProductsList();\r\n            \r\n        }\r\n        if(prevProps.getCategories.length === this.props.getCategories.length && this.updateCategory){\r\n            this.getCategory();\r\n        }\r\n    }\r\n\r\n    getCategory=()=>{\r\n        let allcat = this.props.getCategories.map((item)=>{\r\n                item.selected = false;\r\n            return item\r\n        })\r\n        this.updateCategory = false\r\n        this.setState({categories:allcat})\r\n    }\r\n\r\n    getProductsList = () => {\r\n        const { pageNum, pageSize, fitment } = this.state;\r\n        let search =  this.props.match.params.val.replace(\":\", \"\");\r\n        let restUrl =   encodeURI(`${PRODUCT_BASE_URL}globalsearch/${search}?page=${pageNum}&fitment=${fitment}&limit=${pageSize}`) ;\r\n        serviceCall({}, restUrl, 'GET')\r\n            .then((res) => {\r\n                if (!res.error) {\r\n                    this.setState({ productsList: res.data.data, totalProducts: res.data.total, showLoader:false })\r\n                } else {\r\n\r\n                }\r\n            })\r\n            .catch((error) => {\r\n            })\r\n    }\r\n\r\n    getAllProductsBrand(){\r\n        this.setState({showLoader:true,pageNum:1,selectedCat:false,selectedCategory:{}},()=>{\r\n            this.getProductsList();\r\n            this.getCategory();\r\n        })\r\n        \r\n    }\r\n\r\n    \r\n    getProductsByBrandCat(cat){\r\n        let categories = this.state.categories.map((item)=>{\r\n            if(item._id === cat._id){\r\n                item.selected = true\r\n            }else{\r\n                item.selected = false\r\n            }\r\n        \r\n        return item\r\n        })\r\n        this.setState({categories:categories,selectedCat:true,selectedCategory:cat,pageNum:1,showLoader:true},()=>{\r\n            this.getProductsList();\r\n        })\r\n        \r\n    }\r\n\r\n\r\n\r\n\r\n    displayItems = (item) => {\r\n        this.setState({ pageSize: item,showLoader:true }, () => {\r\n            this.getProductsList();\r\n        })\r\n    }\r\n\r\n\r\n    onChangePagination = (pageNum, paginationFirst, pageSize) => {\r\n        this.setState({ pageNum: pageNum, paginationFirst: paginationFirst, pageSize: pageSize, showLoader: true }, () => {\r\n            window.scrollTo(0, 0);\r\n            this.getProductsList();\r\n        })\r\n    }\r\n\r\n\r\n    openProductDetail=(selectedProduct)=>{\r\n       this.props.history.push('/productdetails/osku:'+ selectedProduct.osku)\r\n    }\r\n\r\n    addToCart=(product)=>{\r\n        this.setState({cartLoader:true},()=>{\r\n            updateProductToCart(product, 1).then((res) => {\r\n                if (!res.data.error) {\r\n                    this.setState({ cartLoader: false, toastMsg: `Product  added to the cart.` }, () => {\r\n                        this.showToast();\r\n                    })\r\n                    this.props.setUserData({ cartcount: res.data.cartcount, orderTotal: res.data.ordertotal });\r\n                } else {\r\n                    this.setState({ cartLoader: false })\r\n                }\r\n            }).catch((error) => {\r\n                this.setState({ cartLoader: false })\r\n            })\r\n        })  \r\n    }\r\n\r\n    saveLater=(product)=>{\r\n        if (this.props.loginData && this.props.loginData.emailId) {\r\n            productSaveLater(this.props.loginData.emailId, product).then((res) => {\r\n                if (!res.error) {\r\n                    this.setState({ cartLoader: false, toastMsg: `Product  added to wishlist` }, () => {\r\n                        this.showToast();\r\n                    })\r\n                } else {\r\n                    this.setState({ cartLoader: false })\r\n                }\r\n            }).catch((error) => {\r\n                this.setState({ cartLoader: false })\r\n            })      \r\n        } else {\r\n            this.setState({ cartLoader: false, toastMsg: `Please login to add to wishlist` }, () => {\r\n                this.showToast();\r\n            })\r\n        }\r\n        \r\n    }\r\n\r\n    showToast = () => {\r\n        if (this.state.Showing) return;\r\n        this.setState({ Show: true, Showing: true });\r\n        setTimeout(() => {\r\n            this.setState({ Show: false, Showing: false, toastMsg: '' });\r\n        }, 2000);\r\n    };\r\n\r\n\r\n\r\n    render() {\r\n        const { pageSize, displayItems, productsList, totalProducts, showLoader, \r\n            cartLoader, toastMsg,paginationFirst } = this.state;\r\n\r\n            const pageTemplate = {\r\n                layout: 'CurrentPageReport FirstPageLink  PrevPageLink PageLinks NextPageLink LastPageLink  RowsPerPageDropdown',\r\n                'CurrentPageReport': (options) => {\r\n                    return (\r\n                        <span style={{ color: appTheme.primaryColor, userSelect: 'none', width: '160px', textAlign: 'center' }}>\r\n                            {options.first} - {options.last} of {options.totalRecords}\r\n                        </span>\r\n                    )\r\n                }\r\n            };\r\n        return (\r\n            <Fragment>\r\n                 <Toast ref={this.toastRef} />\r\n                {showLoader ?\r\n                <div style={{height:350}}>\r\n                       <AppSpinner />\r\n                </div> :\r\n                <div className=\"p-grid maindiv\" >\r\n                    <div className=\"p-col-2 p-mt-6\">\r\n\r\n\r\n                    </div>\r\n                    <div className=\"p-col-10\">\r\n                        <Divider />\r\n                        {productsList.length !==0  ?\r\n                        <div  style={{ display: 'flex', justifyContent: 'center', flexWrap: 'wrap' }} >\r\n                            {productsList.map((product) => (\r\n                                <ProductCard\r\n                                    product={product}\r\n                                    openProductDetail={this.openProductDetail.bind(this)}\r\n                                    addToCart={this.addToCart.bind(this)}\r\n                                    saveLater={this.saveLater.bind(this)}\r\n                                />\r\n                            )\r\n                            )}\r\n                        </div> : \r\n                        <div><Empty /></div>}\r\n                        <Divider />\r\n                        <div style={{\r\n                            display: 'flex', flexDirection: 'row',\r\n                            justifyContent: 'center', alignItems: 'center',\r\n                            marginTop: 20,\r\n                            }}>\r\n                                  <Paginator\r\n                                    first={paginationFirst}\r\n                                    rows={pageSize}\r\n                                    totalRecords={totalProducts}\r\n                                    rowsPerPageOptions={displayItems}\r\n                                    template={pageTemplate}\r\n                                    onPageChange={(e) => this.onChangePagination(e.page, e.first, e.rows)}></Paginator>\r\n\r\n                        </div>\r\n                    </div>\r\n                </div> }\r\n                {cartLoader && <AppSpinner />}\r\n                <ReactSnackBar Show={this.state.Show}>\r\n                    {toastMsg}\r\n                </ReactSnackBar>\r\n            </Fragment>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        userdata: state.userData,\r\n        loginData: state.userLoginData,\r\n        getCategories:state.getCategories\r\n    }\r\n }\r\n function mapDispatchToProps(dispatch) {\r\n    return {\r\n        setUserData: obj =>{\r\n            dispatch({ type: \"SET_APP_DATA\", data: obj });\r\n          }\r\n    }\r\n }\r\n \r\nexport default connect(mapStateToProps, mapDispatchToProps)(SearchProductsList);\r\n","F:\\onetruckparts\\src\\containers\\Settings\\PageNotFound.js",[],"F:\\onetruckparts\\src\\containers\\Cart\\SaveLater.js",[],"F:\\onetruckparts\\src\\containers\\Orders\\Orders.js",[],"F:\\onetruckparts\\src\\containers\\Orders\\TrackOrder.js",[],"F:\\onetruckparts\\src\\containers\\CheckOut\\OrderSuccess.js",["224","225","226","227","228","229"],"import React, { Fragment } from 'react';\r\n\r\nimport { Row, Col, Result, Button } from 'antd';\r\n\r\nimport OneButton from '../../components/OneButton';\r\nimport { Divider } from 'primereact/divider';\r\nimport Ordersuccess from '../../assets/order-success.png';\r\n\r\n\r\nclass OrderSuccess extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Fragment>\r\n                <Result\r\n                    status=\"success\"\r\n                    title=\"Order Successful\"\r\n                    subTitle=\"Thank you so much for your order.\"\r\n                    extra={[\r\n                        <OneButton\r\n                        onClick={() => this.props.history.replace('/')}\r\n                        buttonLabel={\"Back to shopping\"}\r\n                        btnShape=\"round\"\r\n                        btnSize=\"large\"\r\n                        btnBlock={false}\r\n                        buttonStyle={{ height: 36, width:400 }}\r\n                    />\r\n                    ]}\r\n                />\r\n            </Fragment>\r\n        )\r\n    }\r\n\r\n}\r\n\r\n\r\nexport default OrderSuccess;\r\n\r\n\r\n","F:\\onetruckparts\\src\\containers\\CheckOut\\CheckOutPage.js",[],"F:\\onetruckparts\\src\\containers\\FooterPages\\AboutUs.js",["230"],"import React, { Fragment } from 'react';\r\n\r\nimport aboutUs from '../../assets/aboutusimg.png';\r\n\r\nclass AboutUs extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Fragment>\r\n                <img src={aboutUs} alt=\"aboutUs\" style={{width:'100%',height:400,objectFit:'cover'}} />\r\n                <div style={{ padding: 10, margin: '4%' }}>\r\n                    <h1 style={{fontWeight: 'bold', marginBottom: 22 }}>\r\n                        About us\r\n                    </h1>\r\n                    <h3>\r\n                        One auto is an e-commerce that focuses on Auto Parts Online where we are engaging everyone in the automotive industry. We are established in the year 2018 in Orlando, Florida.\r\n                    </h3>\r\n                    <h3>\r\n                        Our mission is to strive to become a pioneer in the automotive parts industry. We have an OEM and aftermarket replacement part offered from over 5000+ brands across the country. Our platform offers a trusted channel for both car owners and auto parts dealers to come under one platform to obtain the maximum benefits. We provide an online catalogue for our customers to find their required automotive components by searching through brand or part number etc. We have an expert team who are dedicated to redefine the spare parts industry. Our Basic Idea is that customers can find the right parts with transparent pricing and timely delivery, will surely be a successful situation for all concerned.\r\n                    </h3>\r\n                    <h3>\r\n                        One Truck trade in high-quality genuine parts of over 5000+ brands with competitive and reasonable prices as our 100% customer satisfaction is our\r\n                        priority. We provide Quality products along with brand awareness with 24×7 customer support. We provide 100% availability of right and genuine parts.\r\n                        brilliant sales team understands the customer needs and requirements quickly to find their right product and quality for their vehicle.\r\n                    </h3>\r\n                    <h2>\r\n                        SHIPPING INFORMATION\r\n                    </h2>\r\n                    <h3>\r\n                        One Auto only deal in 100% genuine products sourced directly from the manufacturers. We ensure at every point that the product being delivered is genuine and in working condition. One Auto ship the items within the time specified on the product page. Business days exclude public holidays and Sundays. Estimated delivery time depends on the type of product, Product's availability, the destination to which you want the order to be shipped and mode of delivery.\r\n                    </h3>\r\n                    <h3>\r\n                        Most of the order for all major cities take 3-4 days in transit. This time duration may increase up to 7 days for remote areas. Each order would be shipped only to a single destination address specified at the time of payment for that order. If you wish to ship products to different addresses, you shall need to place multiple orders.\r\n                    </h3>\r\n                    <h3>\r\n                        You will be informed by the customer team in case of delay beyond 5 days via email or phone contact.\r\n                    </h3>\r\n                    <h2>\r\n                        Shipping Charges\r\n                    </h2>\r\n                    <h3>\r\n                        The listed prices are final and all-inclusive. The prices you see on the product page is what you pay. Shipping charges are calculated according to the weight of products and the value of products in the cart. In case the product is oversized then we charge $150 for each item.\r\n                    </h3>\r\n                    <h2>\r\n                        Refund\r\n                    </h2>\r\n                    <h3>\r\n                        As per our policy, only the product cost is refunded. Shipping charges are non-refundable and will not be refunded in case the product is returned.\r\n                    </h3>\r\n                    <h3>\r\n                        You can cancel your order by getting in touch with us via e-mail at <a href=\"mailto:contact@oneauto.us\">contact@oneauto.us</a> or over phone at our customer care number ******** (10.00 a.m. to 6.00 p.m. / Monday – Saturday). Your order will be cancelled if it has not been shipped and we will refund the order value as applicable. Moreover, if the order has been shipped but not yet delivered to you, you may cancel the order by contacting us as mentioned above. Your refund will only be processed by us once we receive the originally ordered product back from our courier / logistics partner after deduction of shipping charges.\r\n                    </h3>\r\n                    <h3>\r\n                        Once your return is received and inspected, we will send you an email to notify you that we have received your returned item. We will also notify you of the approval or rejection of your refund. After approval the refund will be processed, and a credit will automatically be applied to your credit card or original method of payment, within a certain amount of days.\r\n                    </h3>\r\n                    <h3>\r\n                        If you haven't received a refund yet, please contact us at <a href=\"mailto:customercare@oneauto.us\">customercare@oneauto.us.</a>\r\n                    </h3>\r\n                    <h2>\r\n                        Returns\r\n                    </h2>\r\n                    <h3>\r\n                        Returns are simple. You can directly go to your orders and place the return, or you can contact us to initiate a return. You will receive an email explaining the process once you have initiated a return.\r\n                    </h3>\r\n                    <h3>\r\n                        Wherever possible our logistics partners will facilitate the pick-up of the item. In case, the pick-up cannot be arranged through our logistics partners, you can return the item through a third-party courier service.\r\n                    </h3>\r\n                    <h3>\r\n                        Under some unforeseen circumstances if the product is received in damaged condition, kindly inform our service center to get the product replaced or get else complete refund will be initiated.\r\n                    </h3>\r\n                    <h3>\r\n                        Our policy lasts 10 days. If 10 days have gone by since your purchase, unfortunately, we cannot offer you a refund or exchange.\r\n                    </h3>\r\n                    <h3>\r\n                        To be eligible for a return, your item must be unused and in the same condition that you received it and It must also be in the original packaging. To complete your return, we require a receipt or proof of purchase.\r\n                    </h3>\r\n                    <h2>\r\n                        Additional non-returnable items:\r\n                    </h2>\r\n                    <h3>\r\n                        Gift cards\r\n                    </h3>\r\n                    <h3>\r\n                        Products that already used\r\n                    </h3>\r\n                    <h3>\r\n                        Electronics that have not been installed properly.\r\n                    </h3>\r\n                    <h2>\r\n                        Exchanges\r\n                    </h2>\r\n                    <h3>\r\n                        We only replace items if they are defective or damaged. If you need to exchange it for the same item, send us an email at\r\n                        <a href=\"mailto:customercare@oneauto.com\"> customercare@oneauto.com.</a>\r\n                    </h3>\r\n                </div>\r\n\r\n            </Fragment>\r\n        )\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default AboutUs;","F:\\onetruckparts\\src\\containers\\FooterPages\\Terms.js",["231"],"import React, { Fragment } from 'react';\r\n\r\nimport aboutUs from '../../assets/aboutusimg.png';\r\n\r\nclass Terms extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Fragment>\r\n                <img src={aboutUs} alt=\"aboutUs\" style={{ width: '100%', height: 400, objectFit: 'cover' }} />\r\n                <div style={{ padding: 10, margin: '4%' }}>\r\n                    <h1 style={{fontWeight: 'bold', marginBottom: 22 }}>\r\n                        TERMS OF SERVICE\r\n                    </h1>\r\n                    <h2>\r\n                        OVERVIEW\r\n                    </h2>\r\n                    <h3>\r\n                        This website is operated by Oneauto.us. Throughout the site, the terms “we”, “us” and “our” refer to Oneauto.us. Oneauto.us offers this website, including all information, tools and services available from this site to you, the user, conditioned upon your acceptance of all terms, conditions, policies and notices stated here.\r\n                    </h3>\r\n                    <h3>\r\n                        By visiting our site and/ or purchasing something from us, you engage in our “Service” and agree to be bound by the following terms and conditions (“Terms of Service”, “Terms”), including those additional terms and conditions and policies referenced herein and/or available by hyperlink. These Terms of Service apply  to all users of the site,\r\n                        including without limitation users who are browsers, vendors, customers, merchants, and/ or contributors of content.Please read these Terms of Service carefully before accessing or using our website. By accessing or using any part of the site, you agree to be bound by these Terms of Service. If you do not agree to all the terms and conditions of this agreement,\r\n                        then you may not access the website or use any services. If these Terms of Service are considered an offer, acceptance is expressly limited to these Terms of Service.\r\n                    </h3>\r\n                    <h3>\r\n                        Any new features or tools which are added to the current store shall also be subject to the Terms of Service.\r\n                        You can review the most current version of the Terms of Service at any time on this page. We reserve the right to update,\r\n                        change or replace any part of these Terms of Service by posting updates and/or changes to our website.\r\n                        It is your responsibility to check this page periodically for changes.\r\n                        Your continued use of or access to the website following the posting of any changes constitutes acceptance of those changes.\r\n                    </h3>\r\n                    <h2>\r\n                        SECTION 1 - ONLINE STORE TERMS\r\n                    </h2>\r\n                    <h3>\r\n                        By agreeing to these Terms of Service, you represent that you are at least the age of majority in your state or province of residence, or that you are the age of majority in your state or province of residence and you have given us your consent to allow any of your minor dependents to use this site.\r\n                    </h3>\r\n                    <h3>\r\n                        You must not transmit any worms or viruses or any code of a destructive nature.\r\n                    </h3>\r\n                    <h3>\r\n                        A breach or violation of any of the Terms will result in an immediate termination of your Services.\r\n                    </h3>\r\n                    <h2>\r\n                        SECTION 2 - GENERAL CONDITIONS\r\n                    </h2>\r\n                    <h3>\r\n                        We reserve the right to refuse service to anyone for any reason at any time.\r\n                    </h3>\r\n                    <h3>\r\n                        You understand that your content (not including credit card information), may be transferred unencrypted and involve (a) transmissions over various networks; and (b) changes to conform and adapt to technical requirements of connecting networks or devices.\r\n                        Credit card information is always encrypted during transfer over networks.\r\n                    </h3>\r\n                    <h3>\r\n                        You agree not to reproduce, duplicate, copy, sell, resell or exploit any portion of the Service, use of the Service, or access to the Service or any contact on the website through which the service is provided, without express written permission by us.\r\n                    </h3>\r\n                    <h3>\r\n                        The headings used in this agreement are included for convenience only and will not limit or otherwise affect these Terms.\r\n                    </h3>\r\n                    <h2>\r\n                        SECTION 3 - ACCURACY, COMPLETENESS AND TIMELINESS OF INFORMATION\r\n                    </h2>\r\n                    <h3>\r\n                        We are not responsible if information made available on this site is not accurate, complete or current. The material on this site is provided for general information only and should not be relied upon or used as the sole basis for making decisions without consulting primary, more accurate,\r\n                        more complete or more timely sources of information. Any reliance on the material on this site is at your own risk.\r\n                    </h3>\r\n                    <h3>\r\n                        This site may contain certain historical information. Historical information, necessarily, is not current and is provided for your reference only. We reserve the right to modify the contents of this site at any time, but we have no obligation to update any information on our site.\r\n                        You agree that it is your responsibility to monitor changes to our site.\r\n                    </h3>\r\n                    <h2>\r\n                        SECTION 4 - MODIFICATIONS TO THE SERVICE AND PRICES\r\n                    </h2>\r\n                    <h3>\r\n                        Prices for our products are subject to change without notice.\r\n                    </h3>\r\n                    <h3>\r\n                        We reserve the right at any time to modify or discontinue the Service (or any part or content thereof) without notice at any time.\r\n                    </h3>\r\n                    <h3>\r\n                        We shall not be liable to you or to any third-party for any modification, price change, suspension or discontinuance of the Service.\r\n                    </h3>\r\n                    <h2>\r\n                        SECTION 5 - PRODUCTS OR SERVICES (if applicable)\r\n                    </h2>\r\n                    <h3>\r\n                        Certain products or services may be available exclusively online through the website. These products or services may have limited quantities and are subject to return or exchange only according to our Return Policy.\r\n                    </h3>\r\n                    <h3>\r\n                        We have made every effort to display as accurately as possible the colors and images of our products that appear at the store.\r\n                        We cannot guarantee that your computer monitor's display of any color will be accurate.We reserve the right, but are not obligated,\r\n                        to limit the sales of our products or Services to any person, geographic region or jurisdiction.\r\n                        We may exercise this right on a case-by-case basis. We reserve the right to limit the quantities of any products or services that we offer.\r\n                        All descriptions of products or product pricing are subject to change at anytime without notice, at the sole discretion of us.\r\n                        We reserve the right to discontinue any product at any time. Any offer for any product or service made on this site is void where prohibited.\r\n                    </h3>\r\n                    <h3>\r\n                        We do not warrant that the quality of any products, services, information, or other material purchased or obtained by you will meet your expectations,\r\n                        or that any errors in the Service will be corrected.\r\n                    </h3>\r\n                    <h2>\r\n                        SECTION 6 - ACCURACY OF BILLING AND ACCOUNT INFORMATION\r\n                    </h2>\r\n                    <h3>\r\n                        We reserve the right to refuse any order you place with us. We may, in our sole discretion, limit or cancel quantities purchased per person, per household or per order.\r\n                        These restrictions may include orders placed by or under the same customer account, the same credit card,\r\n                        and/or orders that use the same billing and/or shipping address. In the event that we make a change to or cancel an order,\r\n                        we may attempt to notify you by contacting the e-mail and/or billing address/phone number provided at the time the order was made.\r\n                        We reserve the right to limit or prohibit orders that, in our sole judgment, appear to be placed by dealers, resellers or distributors.\r\n                        You agree to provide current, complete and accurate purchase and account information for all purchases made at our store.\r\n                        You agree to promptly update your account and other information, including your email address and credit card numbers and expiration dates,\r\n                        so that we can complete your transactions and contact you as needed.\r\n                    </h3>\r\n                    <h3>\r\n                        For more detail, please review our Returns Policy.\r\n                    </h3>\r\n                    <h2>\r\n                        SECTION 7 - OPTIONAL TOOLS\r\n                    </h2>\r\n                    <h3>\r\n                        We may provide you with access to third-party tools over which we neither monitor nor have any control nor input.\r\n                    </h3>\r\n                    <h3>\r\n                        You acknowledge and agree that we provide access to such tools ”as is” and “as available” without any warranties,\r\n                        representations or conditions of any kind and without any endorsement.\r\n                        We shall have no liability whatsoever arising from or relating to your use of optional third-party tools.\r\n                    </h3>\r\n                    <h3>\r\n                        Any use by you of optional tools offered through the site is entirely at your own risk and discretion and you should ensure\r\n                        that you are familiar with and approve of the terms on which tools are provided by the relevant third-party provider(s).\r\n                    </h3>\r\n                    <h3>\r\n                        We may also, in the future, offer new services and/or features through the website (including, the release of new tools and resources).\r\n                        Such new features and/or services shall also be subject to these Terms of Service.\r\n                    </h3>\r\n                    <h2>\r\n                        SECTION 8 - THIRD-PARTY LINKS\r\n                    </h2>\r\n                    <h3>\r\n                        Certain content, products and services available via our Service may include materials from third-parties.\r\n                    </h3>\r\n                    <h3>\r\n                        Third-party links on this site may direct you to third-party websites that are not affiliated with us.\r\n                        We are not responsible for examining or evaluating the content or accuracy and we do not warrant and will not have any liability or responsibility for any third-party materials or websites,\r\n                        or for any other materials, products, or services of third-parties.\r\n                    </h3>\r\n                    <h3>\r\n                        We are not liable for any harm or damages related to the purchase or use of goods, services, resources, content, or any other transactions made in connection with any third-party websites.\r\n                        Please review carefully the third-party's policies and practices and make sure you understand them before you engage in any transaction. Complaints, claims, concerns, or questions regarding\r\n                        third-party products should be directed to the third-party.\r\n                    </h3>\r\n                    <h2>\r\n                        SECTION 9 - USER COMMENTS, FEEDBACK AND OTHER SUBMISSIONS\r\n                    </h2>\r\n                    <h3>\r\n                        If, at our request, you send certain specific submissions (for example contest entries) or without a request from us you send creative ideas, suggestions, proposals, plans, or other materials,\r\n                        whether online, by email, by postal mail, or otherwise (collectively, 'comments'), you agree that we may, at any time, without restriction, edit, copy, publish, distribute, translate and otherwise\r\n                        use in any medium any comments that you forward to us. We are and shall be under no obligation (1) to maintain any comments in confidence; (2) to pay compensation for any comments; or (3) to respond to any comments.\r\n                        We may, but have no obligation to, monitor, edit or remove content that we determine in our sole discretion are unlawful, offensive, threatening, libelous, defamatory, pornographic, obscene or otherwise objectionable or\r\n                        violates any party’s intellectual property or these Terms of Service.You agree that your comments will not violate any right of any third-party, including copyright, trademark, privacy, personality or other personal or proprietary right.\r\n                        You further agree that your comments will not contain libelous or otherwise unlawful, abusive or obscene material, or contain any computer virus or other malware that could in any way affect the operation of the Service or any related website.\r\n                        You may not use a false e-mail address, pretend to be someone other than yourself, or otherwise mislead us or third-parties as to the origin of any comments. You are solely responsible for any comments you make and their accuracy.\r\n                        We take no responsibility and assume no liability for any comments posted by you or any third-party.\r\n                    </h3>\r\n                    <h2>\r\n                        SECTION 10 - PERSONAL INFORMATION\r\n                    </h2>\r\n                    <h3>\r\n                        Your submission of personal information through the store is governed by our Privacy Policy. To view our Privacy Policy.\r\n                    </h3>\r\n                    <h2>\r\n                        SECTION 11 - ERRORS, INACCURACIES AND OMISSIONS\r\n                    </h2>\r\n\r\n                    <h3>\r\n                        Occasionally there may be information on our site or in the Service that contains typographical errors, inaccuracies or omissions that may relate to product descriptions, pricing, promotions, offers, product shipping charges, transit times and availability.\r\n                        We reserve the right to correct any errors, inaccuracies or omissions, and to change or update information or cancel orders if any information in the Service or on any related website is inaccurate at any time without prior notice (including after you have submitted your order).\r\n                    </h3>\r\n                    <h3>\r\n                        We undertake no obligation to update, amend or clarify information in the Service or on any related website, including without limitation, pricing information, except as required by law. No specified update or refresh date applied in the Service or on any related website,\r\n                        should be taken to indicate that all information in the Service or on any related website has been modified or updated.\r\n                    </h3>\r\n                    <h2>\r\n                        SECTION 12 - PROHIBITED USES\r\n                    </h2>\r\n                    <h3>\r\n                        In addition to other prohibitions as set forth in the Terms of Service, you are prohibited from using the site or its content:\r\n                        (a) for any unlawful purpose; (b) to solicit others to perform or participate in any unlawful acts; (c) to violate any international, federal, provincial or state regulations, rules, laws, or local ordinances;\r\n                        (d) to infringe upon or violate our intellectual property rights or the intellectual property rights of others; (e) to harass, abuse, insult, harm, defame, slander, disparage, intimidate, or discriminate based on gender, sexual orientation, religion, ethnicity, race, age, national origin, or disability;\r\n                        (f) to submit false or misleading information;(g) to upload or transmit viruses or any other type of malicious code that will or may be used in any way that will affect the functionality or operation of the Service or of any related website, other websites, or the Internet;\r\n                        (h) to collect or track the personal information of others; (i) to spam, phish, pharm, pretext, spider, crawl, or scrape;\r\n                        (j) for any obscene or immoral purpose; or (k) to interfere with or circumvent the security features of the Service or any related website, other websites, or the Internet. We reserve the right to terminate your use of the Service or any related website for violating any of the prohibited uses.\r\n                    </h3>\r\n                    <h2>\r\n                        SECTION 13 - DISCLAIMER OF WARRANTIES; LIMITATION OF LIABILITY\r\n                    </h2>\r\n                    <h3>\r\n                        We do not guarantee, represent or warrant that your use of our service will be uninterrupted, timely, secure or error-free.\r\n                    </h3>\r\n                    <h3>\r\n                        We do not warrant that the results that may be obtained from the use of the service will be accurate or reliable.\r\n                    </h3>\r\n                    <h3>\r\n                        You agree that from time to time we may remove the service for indefinite periods of time or cancel the service at any time, without notice to you.You expressly agree that your use of,\r\n                        or inability to use, the service is at your sole risk. The service and all products and services delivered to you through the service are (except as expressly stated by us) provided 'as is' and 'as available' for your use,\r\n                        without any representation, warranties or conditions of any kind, either express or implied, including all implied warranties or conditions of merchantability, merchantable quality, fitness for a particular purpose, durability,\r\n                        title, and non-infringement.In no case shall Oneauto.us, our directors, officers, employees, affiliates, agents, contractors, interns, suppliers, service providers or licensors be liable for any injury, loss, claim, or any direct, indirect,\r\n                        incidental, punitive, special, or consequential damages of any kind, including, without limitation lost profits, lost revenue, lost savings, loss of data, replacement costs, or any similar damages, whether based in contract, tort (including negligence),\r\n                        strict liability or otherwise, arising from your use of any of the service or any products procured using the service, or for any other claim related in any way to your use of the service or any product, including, but not limited to, any errors or omissions in any content,\r\n                        or any loss or damage of any kind incurred as a result of the use of the service or any content (or product) posted, transmitted, or otherwise made available via the service, even if advised of their possibility.Because some states or jurisdictions do not allow the exclusion or\r\n                        the limitation of liability for consequential or incidental damages, in such states or jurisdictions, our liability shall be limited to the maximum extent permitted by law.\r\n                    </h3>\r\n                    <h2>\r\n                        SECTION 14 - INDEMNIFICATION\r\n                    </h2>\r\n                    <h3>\r\n                        You agree to indemnify, defend and hold harmless Oneauto.us and our parent, subsidiaries, affiliates, partners, officers, directors, agents, contractors, licensors, service providers, subcontractors, suppliers, interns and employees, harmless from any claim or demand,\r\n                        including reasonable attorneys’ fees, made by any third-party due to or arising out of your breach of these Terms of Service or the documents they incorporate by reference, or your violation of any law or the rights of a third-party.\r\n                    </h3>\r\n                    <h2>\r\n                        SECTION 15 - SEVERABILITY\r\n                    </h2>\r\n                    <h3>\r\n                        In the event that any provision of these Terms of Service is determined to be unlawful, void or unenforceable, such provision shall nonetheless be enforceable to the fullest extent permitted by applicable law, and the unenforceable portion shall be deemed to be severed from these Terms of Service,\r\n                        such determination shall not affect the validity and enforceability of any other remaining provisions.\r\n                    </h3>\r\n                    <h2>\r\n                        SECTION 16 - TERMINATION\r\n                    </h2>\r\n                    <h3>\r\n                        The obligations and liabilities of the parties incurred prior to the termination date shall survive the termination of this agreement for all purposes.\r\n                    </h3>\r\n                    <h3>\r\n                        These Terms of Service are effective unless and until terminated by either you or us. You may terminate these Terms of Service at any time by notifying us that you no longer wish to use our Services, or when you cease using our site.If in our sole judgment you fail, or we suspect that you have failed, to comply with any term or provision of these Terms of Service,\r\n                        we also may terminate this agreement at any time without notice and you will remain liable for all amounts due up to and including the date of termination; and/or accordingly may deny you access to our Services (or any part thereof).\r\n                    </h3>\r\n                    <h2>\r\n                        SECTION 17 - ENTIRE AGREEMENT\r\n                    </h2>\r\n                    <h3>\r\n                        The failure of us to exercise or enforce any right or provision of these Terms of Service shall not constitute a waiver of such right or provision.\r\n                    </h3>\r\n                    <h3>\r\n                        These Terms of Service and any policies or operating rules posted by us on this site or in respect to The Service constitutes the entire agreement and understanding between you and us and govern your use of the Service,\r\n                        superseding any prior or contemporaneous agreements, communications and proposals, whether oral or written, between you and us (including, but not limited to, any prior versions of the Terms of Service).\r\n                        Any ambiguities in the interpretation of these Terms of Service shall not be construed against the drafting party.\r\n                    </h3>\r\n                    <h2>\r\n                        SECTION 18 - GOVERNING LAW\r\n                    </h2>\r\n                    <h3>\r\n                        These Terms of Service and any separate agreements whereby we provide you Services shall be governed by and construed in accordance with the laws of 7208 W. Sand Lake Road, Suite 305, Orlando, FL, 32819, United States.\r\n                    </h3>\r\n                    <h2>\r\n                        SECTION 19 - CHANGES TO TERMS OF SERVICE\r\n                    </h2>\r\n                    <h3>\r\n                        You can review the most current version of the Terms of Service at any time at this page.\r\n                    </h3>\r\n                    <h3>\r\n                        We reserve the right, at our sole discretion, to update, change or replace any part of these Terms of Service by posting updates and changes to our website. It is your responsibility to check our website periodically for changes.\r\n                        Your continued use of or access to our website or the Service following the posting of any changes to these Terms of Service constitutes acceptance of those changes.\r\n                    </h3>\r\n                    <h2>\r\n                        SECTION 20 - CONTACT INFORMATION\r\n                    </h2>\r\n                    <h3>\r\n                        Questions about the Terms of Service should be sent to us at <a href=\"mailto:sales@oneauto.com\"> sales@oneauto.com.</a>\r\n                    </h3>\r\n\r\n                </div>\r\n\r\n            </Fragment>\r\n        )\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default Terms;","F:\\onetruckparts\\src\\containers\\FooterPages\\Privacy.js",["232"],"import React, { Fragment } from 'react';\r\n\r\nimport aboutUs from '../../assets/aboutusimg.png';\r\n\r\nclass Privacy extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Fragment>\r\n                <img src={aboutUs} alt=\"aboutUs\" style={{ width: '100%', height: 400, objectFit: 'cover' }} />\r\n                <div style={{ padding: 10, margin: '4%' }}>\r\n                    <h1 style={{fontWeight: 'bold', marginBottom: 22 }}>\r\n                        Privacy Policy\r\n                    </h1>\r\n                    <h3>\r\n                        This Privacy Policy describes how your personal information is collected, used, and shared when you visit or make a purchase from oneauto.us (the “Site”).\r\n                    </h3>\r\n                    <h2>\r\n                        PERSONAL INFORMATION WE COLLECT\r\n                    </h2>\r\n                    <h3>\r\n                        When you visit the Site, we automatically collect certain information about your device, including information about your web browser, IP address, time zone, and some of the cookies that are installed on your device.\r\n                        Additionally, as you browse the Site, we collect information about the individual web pages or products that you view, what websites or search terms referred you to the Site, and information about how you interact with the Site.\r\n                        We refer to this automatically-collected information as “Device Information.”\r\n                    </h3>\r\n                    <h3>\r\n                        We collect Device Information using the following technologies:\r\n                    </h3>\r\n                    <h3>\r\n                        - “Cookies” are data files that are placed on your device or computer and often include an anonymous unique identifier. For more information about cookies, and how to disable cookies, visit http://www.allaboutcookies.org.\r\n                    </h3>\r\n                    <h3>\r\n                        - “Log files” track actions occurring on the Site, and collect data including your IP address, browser type, Internet service provider, referring/exit pages, and date/time stamps.\r\n                    </h3>\r\n                    <h3>\r\n                        - “Web beacons,” “tags,” and “pixels” are electronic files used to record information about how you browse the Site.\r\n                        Additionally when you make a purchase or attempt to make a purchase through the Site, we collect certain information from you, including your name, billing address, shipping address, payment information (including credit card numbers [[INSERT ANY OTHER PAYMENT TYPES ACCEPTED]]), email address, and phone number.\r\n                        We refer to this information as “Order Information.”\r\n                    </h3>\r\n                    <h3>\r\n                        When we talk about “Personal Information” in this Privacy Policy, we are talking both about Device Information and Order Information.\r\n                    </h3>\r\n                    <h2>\r\n                        HOW DO WE USE YOUR PERSONAL INFORMATION?\r\n                    </h2>\r\n                    <h3>\r\n                        We use the Order Information that we collect generally to fulfill any orders placed through the Site (including processing your payment information, arranging for shipping, and providing you with invoices and/or order confirmations).\r\n                        Additionally, we use this Order Information to: <br />\r\n                        Communicate with you;Screen our orders for potential risk or fraud; and\r\n                        When in line with the preferences you have shared with us, provide you with information or advertising relating to our products or services. <br />\r\n                        [[INSERT OTHER USES OF ORDER INFORMATION]] <br />\r\n                        We use the Device Information that we collect to help us screen for potential risk and fraud (in particular, your IP address), and more generally to improve and optimize our Site (for example, by generating analytics about how our customers browse and interact with the Site, and to assess the success of our marketing and advertising campaigns).\r\n                        [[INSERT OTHER USES OF DEVICE INFORMATION, INCLUDING:  ADVERTISING/RETARGETING]]SHARING YOUR PERSONAL INFORMATION\r\n                    </h3>\r\n                    <h3>\r\n                        We share your Personal Information with third parties to help us use your Personal Information, as described above.  For example, we use Google Analytics to help us understand how our customers use the Site--you can read more about how Google uses your Personal Information here:<a href=\"https://www.google.com/intl/en/policies/privacy/\"> https://www.google.com/intl/en/policies/privacy/. </a>\r\n                        You can also opt-out of Google Analytics here: <a href=\"https://tools.google.com/dlpage/gaoptout\">https://tools.google.com/dlpage/gaoptout.</a>\r\n                    </h3>\r\n                    <h3>\r\n                        Finally, we may also share your Personal Information to comply with applicable laws and regulations, to respond to a subpoena,\r\n                        search warrant or other lawful request for information we receive, or to otherwise protect our rights.\r\n                    </h3>\r\n                    <h2>\r\n                        BEHAVIOURAL ADVERTISING\r\n                    </h2>\r\n                    <h3>\r\n                        As described above, we use your Personal Information to provide you with targeted advertisements or marketing communications we believe may be of interest to you.  For more information about how targeted advertising works, you can visit the Network Advertising Initiative’s (“NAI”) educational page at\r\n                        <a href=\"http://www.networkadvertising.org/understanding-online-advertising/how-does-it-work\"> http://www.networkadvertising.org/understanding-online-advertising/how-does-it-work.</a>\r\n                    </h3>\r\n                    <h3>\r\n                        FACEBOOK - <a href=\"https://www.facebook.com/settings/?tab=ads\">https://www.facebook.com/settings/?tab=ads</a>\r\n                    </h3>\r\n                    <h3>\r\n                        GOOGLE - <a href=\"https://www.google.com/settings/ads/anonymous\">https://www.google.com/settings/ads/anonymous</a>\r\n                    </h3>\r\n                    <h3>\r\n                        BING - <a href=\"https://advertise.bingads.microsoft.com/en-us/resources/policies/personalized-ads\">https://advertise.bingads.microsoft.com/en-us/resources/policies/personalized-ads</a>\r\n                    </h3>\r\n                    <h2>\r\n                        DO NOT TRACK\r\n                    </h2>\r\n                    <h3>\r\n                        Please note that we do not alter our Site’s data collection and use practices when we see a Do Not Track signal from your browser.\r\n                    </h3>\r\n                    <h2>\r\n                        YOUR RIGHTS\r\n                    </h2>\r\n                    <h3>\r\n                        If you are a European resident, you have the right to access personal information we hold about you and to ask that your personal information be corrected, updated, or deleted. If you would like to exercise this right, please contact us through the contact information below.Additionally,\r\n                        if you are a European resident we note that we are processing your information in order to fulfill contracts we might have with you (for example if you make an order through the Site), or otherwise to pursue our legitimate business interests listed above.  Additionally, please note that your information will be transferred outside of Europe, including to Canada and the United States.\r\n                    </h3>\r\n                    <h3>\r\n                        DATA RETENTION<br />\r\n                        When you place an order through the Site, we will maintain your Order Information for our records unless and until you ask us to delete this information.\r\n                    </h3>\r\n                    <h3>\r\n                        The Site is not intended for individuals under the age of 13 years.\r\n                    </h3>\r\n                    <h3>\r\n                        CHANGES<br />\r\n                        We may update this privacy policy from time to time in order to reflect, for example, changes to our practices or for other operational, legal or regulatory reasons.\r\n                    </h3>\r\n                    <h3>\r\n                        CONTACT US<br />\r\n                        For more information about our privacy practices, if you have questions, or if you would like to make a complaint, please contact us by e-mail at <a href=\"mailto:sudhapsk@yahoo.com\"> sudhapsk@yahoo.com </a> or by mail using the details provided below:\r\n                    </h3>\r\n                    <h3>\r\n                        7208 W. Sand Lake Road, Suite 305, Orlando, FL, 32819, United States\r\n                    </h3>\r\n\r\n                </div>\r\n\r\n            </Fragment>\r\n        )\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default Privacy;","F:\\onetruckparts\\src\\containers\\Settings\\HomeSettings.js",["233","234"],"import React, { Fragment } from 'react';\r\n\r\nimport { connect } from \"react-redux\";\r\nimport { Dialog } from 'primereact/dialog';\r\nimport { Dropdown } from 'primereact/dropdown';\r\nimport { Checkbox } from 'primereact/checkbox';\r\nimport { InputText } from \"primereact/inputtext\";\r\nimport { OrderList } from 'primereact/orderlist';\r\n\r\n\r\n\r\nimport OneButton from '../../components/OneButton';\r\nimport serviceCall from '../../utils/Services';\r\n\r\nimport { PRODUCT_BASE_URL, appTheme, sectionTypes } from '../../utils/Constants';\r\n\r\n\r\nimport { appStore } from '../../App';\r\n\r\nimport './HomeSettings.css'\r\n\r\nclass HomeSettings extends React.Component {\r\n\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            homeItems: [],\r\n            addNewItem: false,\r\n            scrollOptions: [\r\n                { label: 'Scroll', value: 'scroll' },\r\n                { label: 'Grid', value: 'grid' }\r\n            ],\r\n            gridBlockOptions: [\r\n                { label: 'Product', value: 'product' },\r\n                { label: 'Html', value: 'html' }\r\n            ],\r\n            selectedScrollType: 'scroll',\r\n            selectedBlockType: '',\r\n            isCategory: false\r\n        }\r\n\r\n    }\r\n\r\n    componentWillMount() {\r\n        this.getProductsByCategory();\r\n    }\r\n\r\n\r\n\r\n\r\n    getProductsByCategory = () => {\r\n        let restUrl = `${PRODUCT_BASE_URL}prod/homesettings`\r\n        serviceCall({}, restUrl, 'GET')\r\n            .then((res) => {\r\n                if (!res.error) {\r\n                    this.setState({ homeItems: JSON.parse(res.data.data) })\r\n                } else {\r\n\r\n                }\r\n            })\r\n            .catch((error) => {\r\n            })\r\n    }\r\n\r\n    closeDialog = () => {\r\n        this.setState({ addNewItem: false })\r\n    }\r\n\r\n\r\n\r\n    itemTemplate(item, index) {\r\n        return (\r\n            <div>\r\n                <h3>Scroll Type : {item.sectionType}</h3>\r\n                <h5 className=\"p-mt-2\">List Heading : {item.heading}</h5>\r\n                <h5 className=\"p-mt-2\">List Category : {item.category}</h5>\r\n            </div>\r\n        );\r\n    }\r\n\r\n\r\n    render() {\r\n        const { homeItems, addNewItem, scrollOptions, selectedScrollType, isCategory, gridBlockOptions, selectedBlockType } = this.state;\r\n        return (\r\n            <Fragment>\r\n                <div style={{ padding: 10, margin: '4%' }}>\r\n                    <div style={{ fontSize: 34, fontWeight: '600', marginBottom: 12 }}>\r\n                        Settings\r\n                        </div>\r\n                    <OrderList value={homeItems}\r\n                        header={\r\n                            <div style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\r\n                                <h2>List of Items</h2>\r\n                                <OneButton\r\n                                    onClick={() => this.setState({ addNewItem: true })}\r\n                                    buttonLabel={\"Add New Item\"}\r\n                                    btnSize=\"large\"\r\n                                    buttonStyle={{\r\n                                        fontSize: 16, backgroundColor: appTheme.logoTextColor,\r\n                                        borderColor: appTheme.logoTextColor, width: 200, height: 40\r\n\r\n                                    }}\r\n                                />\r\n                            </div>\r\n                        }\r\n                        dragdrop listStyle={{ height: 'auto' }}\r\n                        itemTemplate={this.itemTemplate.bind(this)} onChange={(e) => this.setState({ homeItems: e.value })}></OrderList>\r\n\r\n                    <Dialog visible={addNewItem} style={{ width: '80%' }} header=\"Add New Item\"\r\n                        onHide={() => this.closeDialog()} modal>\r\n                        <div className=\"p-fluid p-formgrid p-d-flex\">\r\n                            <div className=\"p-field p-col\">\r\n                                <label htmlFor=\"scrollType\">Section Type</label>\r\n                                <Dropdown inputId=\"state\" value={selectedScrollType} options={scrollOptions}\r\n                                    onChange={(e) => this.setState({ selectedScrollType: e.value })} placeholder=\"Select scroll Type\" />\r\n                            </div>\r\n                            <div className=\"p-field p-col\">\r\n                                {selectedScrollType === sectionTypes.SCROLL ?\r\n                                    <div className=\"p-field-checkbox p-ai-center p-jc-center p-mt-5\">\r\n                                        <Checkbox inputId=\"binary\" checked={isCategory} onChange={e => this.setState({ isCategory: e.checked })} />\r\n                                        <label htmlFor=\"binary\">Is Category ?</label>\r\n                                    </div> :\r\n                                    <div className=\"p-field\">\r\n                                        <label htmlFor=\"scrollType\">Block Type</label>\r\n                                        <Dropdown inputId=\"state\" value={selectedBlockType} options={gridBlockOptions}\r\n                                            onChange={(e) => this.setState({ selectedBlockType: e.value })} placeholder=\"Select scroll Type\" />\r\n                                    </div>}\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"p-fluid p-formgrid p-d-flex\">\r\n                            {isCategory ?\r\n                            <div className=\"p-field p-col\">\r\n                                <label htmlFor=\"scrollType\">Section Type</label>\r\n                                <Dropdown inputId=\"state\" value={selectedScrollType} options={scrollOptions}\r\n                                    onChange={(e) => this.setState({ selectedScrollType: e.value })} placeholder=\"Select scroll Type\" />\r\n                            </div> :\r\n                            <div className=\"p-field p-col\">\r\n                            <label htmlFor=\"scrollType\">Section Type</label>\r\n                            <Dropdown inputId=\"state\" value={selectedScrollType} options={scrollOptions}\r\n                                onChange={(e) => this.setState({ selectedScrollType: e.value })} placeholder=\"Select scroll Type\" />\r\n                        </div>}\r\n                            <div className=\"p-field p-col\">\r\n                                {selectedScrollType === sectionTypes.SCROLL ?\r\n                                    <div className=\"p-field-checkbox p-ai-center p-jc-center p-mt-5\">\r\n                                        <Checkbox inputId=\"binary\" checked={isCategory} onChange={e => this.setState({ isCategory: e.checked })} />\r\n                                        <label htmlFor=\"binary\">Is Category ?</label>\r\n                                    </div> :\r\n                                    <div className=\"p-field\">\r\n                                        <label htmlFor=\"scrollType\">Block Type</label>\r\n                                        <Dropdown inputId=\"state\" value={selectedBlockType} options={gridBlockOptions}\r\n                                            onChange={(e) => this.setState({ selectedBlockType: e.value })} placeholder=\"Select scroll Type\" />\r\n                                    </div>}\r\n                            </div>\r\n                        </div>\r\n\r\n                    </Dialog>\r\n                </div>\r\n\r\n            </Fragment>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n\r\n    }\r\n}\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n\r\n    }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(HomeSettings);\r\n\r\n","F:\\onetruckparts\\src\\components\\Footer\\Footer.js",["235","236","237","238","239"],"import React, { Fragment } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { InputText } from 'primereact/inputtext';\r\nimport { Button } from 'primereact/button';\r\nimport logo from '../../assets/oneauto.png';\r\n\r\nimport fb from '../../assets/fb.png';\r\nimport insta from '../../assets/insta.png';\r\nimport twitter from '../../assets/twitter.png';\r\nimport youtube from '../../assets/youtube.png';\r\nimport { appTheme } from '../../utils/Constants';\r\nimport './Footer.css'\r\n\r\nclass Footer extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            matches: window.matchMedia(\"(min-width: 768px)\").matches\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        const handler = e => this.setState({matches: e.matches});\r\n        window.matchMedia(\"(min-width: 768px)\").addListener(handler);\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <Fragment>\r\n                {this.state.matches &&\r\n                <div className=\"footer-main\">\r\n                    <div className=\"p-grid\">\r\n                        <div className=\"p-col-4 footer-col\">\r\n                            <img src={logo} height=\"42px\" style={{ objectFit: 'contain', alignSelf: 'flex-start' }} />\r\n\r\n                            <div className=\"p-mt-6\">\r\n                                <div className=\"footer-title\">Contact Us</div>\r\n                                <div className=\"footer-text p-mt-2\">\r\n                                    <i className=\"pi pi-phone p-mr-4\" style={{ color: appTheme.logoTextColor }} />  (888) 520-2490\r\n                                </div>\r\n                                <div className=\"footer-text p-mt-2\">\r\n                                    <i className=\"pi pi-envelope p-mr-4\" style={{ color: appTheme.logoTextColor }} /> sales@oneauto.us\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"p-col-2 footer-col\">\r\n                            <div className=\"footer-title\">Information</div>\r\n                            <Link className=\"footer-link\" to={\"/about-us\"}>\r\n                                About Us\r\n                                </Link>\r\n                            <Link className=\"footer-link\">\r\n                                Careers\r\n                                </Link>\r\n                            <Link className=\"footer-link\" to={\"/terms_condition\"}>\r\n                                Terms & Conditions\r\n                                </Link>\r\n                            <Link className=\"footer-link\" to={\"/privacy_policy\"}>\r\n                                Privacy Policy\r\n                                </Link>\r\n                        </div>\r\n                        <div className=\"p-col-2 footer-col\">\r\n                            <div className=\"footer-title\">Helpful</div>\r\n                            <Link className=\"footer-link\">\r\n                                Help Center\r\n                            </Link>\r\n                            <Link className=\"footer-link\">\r\n                                Returns\r\n                            </Link>\r\n                            <Link className=\"footer-link\">\r\n                                Contact Us\r\n                            </Link>\r\n                            <Link className=\"footer-link\">\r\n                                Shipping Information\r\n                            </Link>\r\n                        </div>\r\n                        <div className=\"p-col-4 footer-col\" style={{ justifyContent: 'center', alignItems: 'flex-end' }}>\r\n                            <div className=\"footer-title p-ml-6\" style={{ alignSelf: 'center' }}>\r\n                                Subscribe For Email\r\n                            </div>\r\n                            <div className=\"p-formgroup-inline p-mt-4\">\r\n                                <div className=\"p-field\">\r\n                                    <InputText type=\"email\" className=\"p-inputtext-sm p-mb-2\" placeholder=\"Enter your Email\" />\r\n                                </div>\r\n                                <Button type=\"button\" label=\"Subscribe\" className=\"p-button-sm\"\r\n                                    style={{\r\n                                        backgroundColor: appTheme.logoTextColor,\r\n                                        borderColor: appTheme.logoTextColor\r\n                                    }} />\r\n                            </div>\r\n                        </div>\r\n\r\n                    </div>\r\n                    <div className=\"footer-bottom\">\r\n                        <img src={fb} height=\"38px\" style={{ objectFit: 'contain',marginRight:18}} />\r\n                        <img src={insta} height=\"38px\" style={{ objectFit: 'contain',marginRight:18}} />\r\n                        <img src={youtube} height=\"38px\" style={{ objectFit: 'contain',marginRight:18}} />\r\n                        <img src={twitter} height=\"38px\" style={{ objectFit: 'contain',marginRight:18}} />\r\n                    </div>\r\n                </div>\r\n                }\r\n\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default Footer;","F:\\onetruckparts\\src\\components\\Navbar\\Navbar.js",["240"],"// import React, { Fragment } from 'react';\r\n\r\n// import {\r\n//    Row, Col,\r\n//    Popover, Empty,\r\n//    Select, Divider,\r\n//    Badge, Avatar\r\n// } from 'antd';\r\n// import { Link } from 'react-router-dom';\r\n// import { OverlayPanel } from 'primereact/overlaypanel';\r\n// import { Button } from 'primereact/button';\r\n// import { connect } from \"react-redux\";\r\n// import {\r\n//    DownOutlined, ShoppingCartOutlined,\r\n//    CarOutlined, UserOutlined\r\n// } from '@ant-design/icons';\r\n\r\n// import Search from './Search';\r\n// import OneButton from '../OneButton';\r\n// import logo from '../../assets/oneauto.png';\r\n// import noFitment from '../../assets/nofitment.png';\r\n\r\n// import { isNotEmpty } from '../../utils/Utils';\r\n// import serviceCall from '../../utils/Services';\r\n// import { appTheme, menuItems, PRODUCT_BASE_URL, userRoles } from '../../utils/Constants';\r\n// import userProfile from '../../utils/UserProfile';\r\n// import FirebaseAuth from '../../containers/Auth/FirebaseAuth';\r\n\r\n// import \"./Navbar.css\";\r\n\r\n// const { Option } = Select;\r\n// class Navbar extends React.Component {\r\n//    constructor(props) {\r\n//       super(props);\r\n//       this.state = {\r\n//          showAccountPopOver: false,\r\n//          createNewFitment: false,\r\n//          userData: {},\r\n//          categories: [],\r\n//          fitmentList: [],\r\n//          fitmentYear: [],\r\n//          fitmentMake: [],\r\n//          fitmentModel: [],\r\n//          selectedYear: null,\r\n//          selectedMake: null,\r\n//          selectedModel: null\r\n\r\n//       }\r\n\r\n//       this.overLayRef = React.createRef();\r\n//    }\r\n\r\n\r\n//    componentDidMount() {\r\n//       this.getCategories();\r\n//       let userData = userProfile.getUserObj();\r\n//       this.setState({ userData: userData });\r\n//    }\r\n\r\n//    componentDidUpdate(prevProps) {\r\n\r\n//    }\r\n\r\n\r\n//    getCategories = () => {\r\n//       let restUrl = `${PRODUCT_BASE_URL}prod/categories`\r\n//       serviceCall({}, restUrl, 'GET')\r\n//          .then((res) => {\r\n//             if (!res.error) {\r\n//                this.props.getcategories(res.data);\r\n//                this.setState({ categories: res.data })\r\n//             } else {\r\n\r\n//             }\r\n//          })\r\n//          .catch((error) => {\r\n//          })\r\n//    }\r\n\r\n//    handleVisibleChange = showAccountPopOver => {\r\n//       this.setState({ showAccountPopOver });\r\n//    };\r\n\r\n//    hideMenuPopOver = () => {\r\n//       this.setState({ showAccountPopOver: false })\r\n//    }\r\n\r\n//    logOut = () => {\r\n//       FirebaseAuth.auth().signOut().then(() => {\r\n//          userProfile.setUserObj({});\r\n//          this.setState({ showAccountPopOver: false, userData: {} })\r\n//          window.location = \"/\";\r\n//       })\r\n//    }\r\n\r\n\r\n//    renderMenu = () => {\r\n//       const { userData } = this.state;\r\n//       return (\r\n//          <div>\r\n//             <div className=\"menu-list-btn-item\">\r\n//                {(userData && userData.emailId) ?\r\n//                   <div style={{ display: 'flex', flexDirection: 'row', justifyContent: 'space-between' }}>\r\n//                      <Avatar size=\"large\" style={{ backgroundColor: appTheme.primaryColor }} >\r\n//                         {userData.emailId.charAt(0)}\r\n//                      </Avatar>\r\n//                      <h3 style={{ alignSelf: 'center', marginLeft: 10 }}>{userData.emailId}</h3>\r\n//                   </div> :\r\n//                   <Link className=\"navbar-btn-text\" to=\"/login\">\r\n//                      <OneButton\r\n//                         buttonLabel={\"Login or Sign Up\"}\r\n//                         btnSize=\"large\"\r\n//                         buttonStyle={{\r\n//                            fontSize: 16, backgroundColor: appTheme.logoTextColor,\r\n//                            borderColor: appTheme.logoTextColor, width: 200, height: 40\r\n\r\n//                         }}\r\n//                      />\r\n//                   </Link>}\r\n//             </div>\r\n//             {menuItems.map((item, index) =>\r\n//                <Link className='menu-list-item' key={index} to={item.screenToNavigate}\r\n//                   onClick={this.hideMenuPopOver.bind(this)}\r\n//                >\r\n//                   <h4 style={{ color: appTheme.lightColor }}>\r\n//                      {item.navOptionName}\r\n//                   </h4>\r\n//                </Link>\r\n//             )}\r\n//             <Link className='menu-list-item' to='/settings'\r\n//                onClick={this.hideMenuPopOver.bind(this)}\r\n//             >\r\n//                <h4 style={{ color: appTheme.lightColor }}>\r\n//                   Settings\r\n//               </h4>\r\n//             </Link>\r\n//             {(userData && userData.accessToken) &&\r\n//                <div className='menu-list-item'\r\n//                   onClick={this.logOut.bind(this)}\r\n//                >\r\n//                   <h4 style={{ color: appTheme.lightColor }}>\r\n//                      Log Out\r\n//                 </h4>\r\n//                </div>}\r\n//          </div>\r\n//       )\r\n//    }\r\n\r\n//    openFitmentPopOver = (e) => {\r\n//       this.getFitmentList();\r\n//       this.getFitmentYear();\r\n//       this.overLayRef.current.toggle(e)\r\n//    }\r\n\r\n\r\n//    getFitmentList = () => {\r\n//       let restUrl = `${PRODUCT_BASE_URL}fitment/garage`\r\n//       serviceCall({}, restUrl, 'GET')\r\n//          .then((res) => {\r\n//             if (!res.error) {\r\n//                this.setState({ fitmentList: res.data.garage })\r\n//             } else {\r\n\r\n//             }\r\n//          })\r\n//          .catch((error) => {\r\n//          })\r\n//    }\r\n\r\n//    getFitmentYear = () => {\r\n//       let restUrl = `${PRODUCT_BASE_URL}fitment/year`\r\n//       serviceCall({}, restUrl, 'GET')\r\n//          .then((res) => {\r\n//             if (!res.error) {\r\n//                this.setState({ fitmentYear: res.data.years })\r\n//             } else {\r\n\r\n//             }\r\n//          })\r\n//          .catch((error) => {\r\n//          })\r\n//    }\r\n\r\n//    selectedYear(value) {\r\n//       this.setState({ selectedYear: value }, () => {\r\n//          this.getFitmentMake(value);\r\n//       })\r\n//    }\r\n\r\n//    getFitmentMake = (year) => {\r\n//       let restUrl = `${PRODUCT_BASE_URL}fitment/make/${year}`\r\n//       serviceCall({}, restUrl, 'GET')\r\n//          .then((res) => {\r\n//             if (!res.error) {\r\n//                this.setState({ fitmentMake: res.data.makes })\r\n//             } else {\r\n\r\n//             }\r\n//          })\r\n//          .catch((error) => {\r\n//          })\r\n//    }\r\n\r\n//    selectedMake(value) {\r\n//       this.setState({ selectedMake: value }, () => {\r\n//          this.getFitmentModel(value);\r\n//       })\r\n//    }\r\n\r\n//    getFitmentModel = (make) => {\r\n//       let restUrl = `${PRODUCT_BASE_URL}fitment/model/${make}/${this.state.selectedYear}`\r\n//       serviceCall({}, restUrl, 'GET')\r\n//          .then((res) => {\r\n//             if (!res.error) {\r\n//                this.setState({ fitmentModel: res.data.models })\r\n//             } else {\r\n\r\n//             }\r\n//          })\r\n//          .catch((error) => {\r\n//          })\r\n//    }\r\n\r\n//    addVehicle = () => {\r\n//       const { selectedYear, selectedMake, selectedModel } = this.state;\r\n//       if (!isNotEmpty(selectedYear)) {\r\n\r\n//       } else if (!isNotEmpty(selectedMake)) {\r\n\r\n//       } else if (!isNotEmpty(selectedModel)) {\r\n\r\n//       } else {\r\n//          let restUrl = `${PRODUCT_BASE_URL}fitment/garage/add/${selectedYear}/${selectedMake}/${selectedModel}`\r\n//          serviceCall({}, restUrl, 'GET')\r\n//             .then((res) => {\r\n//                if (!res.error) {\r\n//                   this.setState({ fitmentList: res.data.garage, createNewFitment: false })\r\n//                } else {\r\n\r\n//                }\r\n//             })\r\n//             .catch((error) => {\r\n//             })\r\n//       }\r\n\r\n//    }\r\n\r\n//    deleteVechile = (index) => {\r\n//       let restUrl = `${PRODUCT_BASE_URL}fitment/garage/delete/${index}`\r\n//       serviceCall({}, restUrl, 'GET')\r\n//          .then((res) => {\r\n//             if (!res.error) {\r\n//                this.setState({ fitmentList: res.data.garage, createNewFitment: false })\r\n//             } else {\r\n\r\n//             }\r\n//          })\r\n//          .catch((error) => {\r\n//          })\r\n//    }\r\n\r\n\r\n\r\n\r\n\r\n//    render() {\r\n//       const { categories, createNewFitment, showAccountPopOver, fitmentList, userData,\r\n//          fitmentYear, fitmentMake, fitmentModel, selectedYear, selectedMake } = this.state\r\n//       let { userdata } = this.props;\r\n\r\n//       return (\r\n//          <Fragment>\r\n//             <Row type=\"flex\" className=\"navbar-main\">\r\n//                <Fragment>\r\n//                   <Col span={3} className=\"navbar-style\">\r\n//                      <Link to={'/'} >\r\n//                         <img src={logo} alt={'logo'} style={{ alignSelf: 'center', justifySelf: 'center', marginLeft: 6 }} height=\"40px\" />\r\n//                      </Link>\r\n//                   </Col>\r\n//                   <Col span={18} className=\"navbar-style\" >\r\n//                      <Row type=\"flex\" style={{ alignItems: 'center' }}>\r\n//                         <Col span={3} style={{ marginLeft: 20 }}>\r\n//                            {/* <Locations /> */}\r\n//                         </Col>\r\n//                         <Col span={16}>\r\n//                            <Search navProps={this.props.history} />\r\n//                         </Col>\r\n//                         <Col span={4} style={{ display: 'flex', flexDirection: 'row', alignItems: 'center', justifyContent: 'center' }}>\r\n//                            <UserOutlined style={{ fontSize: '28px', color: '#fff', marginRight: 14 }} />\r\n//                            <Popover content={this.renderMenu()}\r\n//                               trigger=\"click\"\r\n//                               placement=\"bottom\"\r\n//                               visible={showAccountPopOver}\r\n//                               onVisibleChange={this.handleVisibleChange}\r\n//                               title=\"\">\r\n//                               {(userData && userData.accessToken) ?\r\n//                                  <h3 style={{ color: '#fff', marginBottom: 0 }}>My Account <DownOutlined /></h3> :\r\n//                                  <div style={{ color: '#fff', marginBottom: 0 }}>\r\n//                                     <h3 style={{ color: '#fff', marginBottom: 0 }}>My Account</h3>\r\n//                                     <h5 style={{ color: '#fff', fontWeight: 400, marginBottom: 0 }}>\r\n//                                        Login/Sign Up  <DownOutlined />\r\n//                                     </h5>\r\n//                                  </div>\r\n//                               }\r\n//                            </Popover>\r\n\r\n//                         </Col>\r\n//                      </Row>\r\n//                   </Col>\r\n//                   <Col span={3} style={{ display: 'flex', alignItems: 'center' }}>\r\n//                      <Link style={{ display: 'flex', alignItems: 'center', paddingLeft: 10, marginTop: 4 }} to={'/cart'}>\r\n//                         <Badge style={{ backgroundColor: appTheme.logoTextColor, borderColor: appTheme.secondaryColor }}\r\n//                            count={userdata && userdata.cartcount ? userdata.cartcount : 0}>\r\n//                            <ShoppingCartOutlined style={{ fontSize: '34px', color: '#fff' }} />\r\n//                         </Badge>\r\n//                         <h3 style={{ marginLeft: 20, color: '#fff', marginTop: 4 }}>My Cart</h3>\r\n//                      </Link>\r\n//                   </Col>\r\n//                </Fragment>\r\n//                <Fragment>\r\n//                   <Col span={1} />\r\n//                   <Col span={5} className=\"navbar-style\">\r\n//                      <Link className=\"navbar-brand\"\r\n//                         to={'/brands'}\r\n//                      >BRANDS</Link>\r\n//                   </Col>\r\n\r\n//                   <Col span={13} className=\"navbar-style\">\r\n//                      <div className=\"navbar-main-categories\">\r\n//                         {categories !== 0 && categories.map((cat, index) => (\r\n//                            <>\r\n//                               {(index > 0) && <div className=\"navbar-vl\" />}\r\n//                               <Link className=\"navbar-btn-text\" key={index}\r\n//                                  to={{ pathname: '/products/category:' + cat.name, state: { catName: cat.name } }}\r\n//                               >{cat.display_name}</Link>\r\n\r\n//                            </>\r\n//                         ))}\r\n//                      </div>\r\n//                   </Col>\r\n//                   <Col span={4} className=\"navbar-style\">\r\n//                      <div className=\"selectVechile\" onClick={(e) => this.openFitmentPopOver(e)}>\r\n//                         <CarOutlined style={{ marginRight: 10, fontSize: 24 }} />  Select Your Vehicle\r\n//                </div>\r\n//                   </Col>\r\n//                   <Col span={1} />\r\n//                </Fragment>\r\n//             </Row>\r\n\r\n//             <OverlayPanel ref={this.overLayRef}\r\n//                showCloseIcon={false} id=\"overlay_panel\" style={{ width: 440 }}>\r\n//                {createNewFitment ?\r\n//                   <div>\r\n//                      <div style={{ display: 'flex', flexDirection: 'row', justifyContent: 'space-between' }}>\r\n//                         <Select style={{ width: 180 }}\r\n//                            placeholder=\"Select Year\"\r\n//                            size={'large'}\r\n//                            onChange={(value) => this.selectedYear(value)}>\r\n//                            {fitmentYear.map((year) => (\r\n//                               <Option value={year}>{year}</Option>\r\n//                            ))}\r\n//                         </Select>\r\n//                         <Select style={{ width: 180 }}\r\n//                            size={'large'}\r\n//                            disabled={!isNotEmpty(selectedYear)}\r\n//                            placeholder=\"Select Brand\"\r\n//                            onChange={(value) => this.selectedMake(value)}>\r\n//                            {fitmentMake.map((make) => (\r\n//                               <Option value={make}>{make}</Option>\r\n//                            ))}\r\n//                         </Select>\r\n//                      </div>\r\n//                      <div style={{ display: 'flex', flexDirection: 'row', justifyContent: 'space-between', marginTop: 22 }}>\r\n//                         <Select style={{ width: 440 }}\r\n//                            size={'large'}\r\n//                            disabled={!isNotEmpty(selectedMake)}\r\n//                            placeholder=\"Select Modal\"\r\n//                            onChange={(value) => this.setState({ selectedModel: value })}>\r\n//                            {fitmentModel.map((model) => (\r\n//                               <Option value={model}>{model}</Option>\r\n//                            ))}\r\n//                         </Select>\r\n//                      </div>\r\n//                      <Divider />\r\n//                      <div style={{ display: 'flex', flexDirection: 'row', justifyContent: 'flex-end', marginTop: 22 }}>\r\n//                         <OneButton\r\n//                            onClick={() => this.setState({ createNewFitment: false })}\r\n//                            buttonLabel={\"Back to List\"}\r\n//                            btnSize=\"large\"\r\n//                            btnBlock={false}\r\n//                            btnType=\"link\"\r\n//                            buttonStyle={{ fontSize: 16, marginRight: 6, backgroundColor: '#fff', borderColor: '#fff', color: appTheme.logoTextColor }}\r\n//                         />\r\n//                         <OneButton\r\n//                            onClick={this.addVehicle}\r\n//                            buttonLabel={\"Add Vehicle\"}\r\n//                            btnSize=\"large\"\r\n//                            btnBlock={false}\r\n//                            buttonStyle={{ fontSize: 16 }}\r\n//                         />\r\n//                      </div>\r\n\r\n//                   </div> :\r\n//                   <div>\r\n//                      {fitmentList.length === 0 ?\r\n//                         <div style={{ display: 'flex', justifyContent: 'center', alignItems: 'center', flexDirection: 'column' }}>\r\n//                            <img src={noFitment} alt={'noFitment'}\r\n//                               style={{ alignSelf: 'center', justifySelf: 'center', marginLeft: 6 }} height=\"120px\" />\r\n//                            <h3 style={{ color: appTheme.logoTextColor }}>No Fitmet Data</h3>\r\n//                         </div> :\r\n//                         <div>\r\n//                            <div style={{ fontSize: 18, fontWeight: '600', marginBottom: 8 }}>Select Your Vehicle</div>\r\n//                            {fitmentList.map((fit, index) => (\r\n//                               <div className=\"p-shadow-2 fitment-list p-mb-2\" >\r\n//                                  <div className=\"fitment-list\">\r\n//                                     <div>\r\n//                                        <div style={{ fontSize: 16, fontWeight: '600', marginBottom: 0 }}>{fit.makename} {' '} ( {fit.year} )</div>\r\n//                                        <div style={{ fontSize: 14, fontWeight: '500', color: appTheme.dark5 }}>{fit.modelname}, {fit.mfrlabel}</div>\r\n//                                     </div>\r\n//                                  </div>\r\n//                                  <div>\r\n//                                     <Button icon=\"pi pi-trash\" className=\"p-button-danger p-button-text\" onClick={() => this.deleteVechile(index)} />\r\n//                                  </div>\r\n//                               </div>\r\n//                            ))}\r\n//                         </div>\r\n//                      }\r\n//                      <Divider />\r\n//                      <div style={{ display: 'flex', justifyContent: 'flex-end', marginTop: 22 }}>\r\n//                         <OneButton\r\n//                            onClick={() => this.setState({ createNewFitment: true })}\r\n//                            buttonLabel={\"Add New Vehicle\"}\r\n//                            btnSize=\"large\"\r\n//                            btnBlock={false}\r\n//                            buttonStyle={{ fontSize: 16 }}\r\n//                         />\r\n//                      </div>\r\n//                   </div>}\r\n//             </OverlayPanel>\r\n\r\n//          </Fragment>\r\n//       )\r\n//    }\r\n\r\n\r\n// }\r\n\r\n// function mapStateToProps(state) {\r\n//    return {\r\n//       userdata: state.userData,\r\n//       loginData: state.userLoginData,\r\n//       getCategories: state.getCategories\r\n//    }\r\n// }\r\n// function mapDispatchToProps(dispatch) {\r\n//    return {\r\n//       getcategories: (catobj) => { dispatch({ type: 'GET_CAT', categories: catobj }) },\r\n//       removeUserLoginData: () => {\r\n//          dispatch({ type: \"REMOVE_LOGIN_DATA\" });\r\n//       }\r\n//    }\r\n// }\r\n\r\n// export default connect(mapStateToProps, mapDispatchToProps)(Navbar);\r\n\r\n\r\nimport React from 'react';\r\n\r\nimport DesktopNavbar from './DesktopNavbar';\r\n\r\nimport MobileNavbar from './MobileNavbar';\r\n\r\nclass Navbar extends React.Component {\r\n   constructor(props){\r\n      super(props);\r\n      this.state = {\r\n         matches: window.matchMedia(\"(min-width: 768px)\").matches\r\n      }\r\n      \r\n   }\r\n\r\n   componentDidMount(){\r\n      const handler = e => this.setState({matches: e.matches});\r\n      window.matchMedia(\"(min-width: 768px)\").addListener(handler);\r\n  }\r\n\r\n   render(){\r\n      const {matches} = this. state;\r\n      return(\r\n         <div style={{position:'sticky',top:0,zIndex:99}}>\r\n            {matches ?\r\n               <DesktopNavbar /> :\r\n               <MobileNavbar/>\r\n         }\r\n         </div>\r\n      )\r\n   }\r\n}\r\n\r\nexport default Navbar\r\n\r\n","F:\\onetruckparts\\src\\store\\reducers\\index.js",["241","242","243"],"import {combineReducers} from 'redux';\r\nimport {userLoginData,getCategories,cartList,getDeals,getAllProducts,userData} from \"./reducers\";\r\n\r\nexport default combineReducers(Object.assign({\r\n    userLoginData,\r\n    getCategories,\r\n    userData\r\n}\r\n    \r\n));","F:\\onetruckparts\\src\\components\\OneButton.js",[],"F:\\onetruckparts\\src\\components\\AppSpinner.js",["244"],"import React from 'react';\r\nimport { ProgressSpinner } from 'primereact/progressspinner';\r\n\r\nimport loader from '../assets/loader.gif';\r\n \r\n const AppSpinner = props => {\r\n  \r\n\r\n        return (\r\n            <div style={{justifyContent:'center',alignItems:'center',alignContent:'center',\r\n                    height:'100%',width:'100%',display:'flex',position:'fixed',\r\n                    top:0,left:0,backgroundColor:'rgba(0,0,0,0.2)',zIndex:999}}> \r\n            {/* <ProgressSpinner strokeWidth=\"4\" style={{zIndex:999}} \r\n                animationDuration=\"1.5s\"\r\n                fill=\"transparent\"/> */}\r\n                 <img src={loader} alt=\"aboutUs\" style={{width:150,height:150,objectFit:'contain'}} />\r\n            </div>\r\n        )\r\n     }\r\n\r\n \r\n \r\n \r\nexport default AppSpinner;\r\n \r\n\r\n","F:\\onetruckparts\\src\\utils\\Utils.js",[],"F:\\onetruckparts\\src\\utils\\Services.js",[],"F:\\onetruckparts\\src\\components\\ReactSnackBar.js",[],"F:\\onetruckparts\\src\\utils\\commonService.js",[],"F:\\onetruckparts\\src\\containers\\CheckOut\\Locations.js",[],"F:\\onetruckparts\\src\\components\\Navbar\\MobileNavbar.js",["245","246","247","248","249","250","251","252","253","254","255","256","257","258","259"],"import React, { Fragment } from 'react';\r\n\r\nimport {\r\n   Select, Drawer,\r\n   Badge, Avatar\r\n} from 'antd';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n   DownOutlined, ShoppingCartOutlined,\r\n   CarOutlined, UserOutlined\r\n} from '@ant-design/icons';\r\n\r\nimport Search from './Search';\r\nimport OneButton from '../OneButton';\r\nimport logo from '../../assets/oneauto.png';\r\nimport noFitment from '../../assets/nofitment.png';\r\n\r\nimport { isNotEmpty } from '../../utils/Utils';\r\nimport serviceCall from '../../utils/Services';\r\nimport { appTheme, menuItems, PRODUCT_BASE_URL, userRoles } from '../../utils/Constants';\r\nimport userProfile from '../../utils/UserProfile';\r\nimport FirebaseAuth from '../../containers/Auth/FirebaseAuth';\r\n\r\nimport \"./Navbar.css\";\r\n\r\nconst { Option } = Select;\r\nclass MobileNavbar extends React.Component {\r\n   constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n         showSideMenu: false,\r\n         showAccountPopOver: false,\r\n         createNewFitment: false,\r\n         userData: {},\r\n         categories: [],\r\n         fitmentList: [],\r\n         fitmentYear: [],\r\n         fitmentMake: [],\r\n         fitmentModel: [],\r\n         selectedYear: null,\r\n         selectedMake: null,\r\n         selectedModel: null\r\n\r\n      }\r\n\r\n      this.overLayRef = React.createRef();\r\n   }\r\n\r\n\r\n   componentDidMount() {\r\n      this.getCategories();\r\n      let userData = userProfile.getUserObj();\r\n      this.setState({ userData: userData });\r\n   }\r\n\r\n   componentDidUpdate(prevProps) {\r\n\r\n   }\r\n\r\n\r\n   getCategories = () => {\r\n      let restUrl = `${PRODUCT_BASE_URL}prod/categories`\r\n      serviceCall({}, restUrl, 'GET')\r\n         .then((res) => {\r\n            if (!res.error) {\r\n               this.props.getcategories(res.data);\r\n               this.setState({ categories: res.data })\r\n            } else {\r\n\r\n            }\r\n         })\r\n         .catch((error) => {\r\n         })\r\n   }\r\n\r\n   handleVisibleChange = showAccountPopOver => {\r\n      this.setState({ showAccountPopOver });\r\n   };\r\n\r\n   hideMenuPopOver = () => {\r\n      this.setState({ showAccountPopOver: false })\r\n   }\r\n\r\n   logOut = () => {\r\n      FirebaseAuth.auth().signOut().then(() => {\r\n         userProfile.setUserObj({});\r\n         this.setState({ showAccountPopOver: false, userData: {} })\r\n         window.location = \"/\";\r\n      })\r\n   }\r\n\r\n\r\n   renderMenu = () => {\r\n      const { userData } = this.state;\r\n      return (\r\n         <div>\r\n            <div className=\"menu-list-btn-item\">\r\n               {(userData && userData.emailId) ?\r\n                  <div style={{ display: 'flex', flexDirection: 'row', justifyContent: 'space-between' }}>\r\n                     <Avatar size=\"large\" style={{ backgroundColor: appTheme.primaryColor }} >\r\n                        {userData.emailId.charAt(0)}\r\n                     </Avatar>\r\n                     <h3 style={{ alignSelf: 'center', marginLeft: 10 }}>{userData.emailId}</h3>\r\n                  </div> :\r\n                  <Link className=\"navbar-btn-text\" to=\"/login\">\r\n                     <OneButton\r\n                        buttonLabel={\"Login or Sign Up\"}\r\n                        btnSize=\"large\"\r\n                        buttonStyle={{\r\n                           fontSize: 16, backgroundColor: appTheme.logoTextColor,\r\n                           borderColor: appTheme.logoTextColor, width: 200, height: 40\r\n\r\n                        }}\r\n                     />\r\n                  </Link>}\r\n            </div>\r\n            {menuItems.map((item, index) =>\r\n               <Link className='menu-list-item' key={index} to={item.screenToNavigate}\r\n                  onClick={this.hideMenuPopOver.bind(this)}\r\n               >\r\n                  <h4 style={{ color: appTheme.lightColor }}>\r\n                     {item.navOptionName}\r\n                  </h4>\r\n               </Link>\r\n            )}\r\n            <Link className='menu-list-item' to='/settings'\r\n               onClick={this.hideMenuPopOver.bind(this)}\r\n            >\r\n               <h4 style={{ color: appTheme.lightColor }}>\r\n                  Settings\r\n              </h4>\r\n            </Link>\r\n            {(userData && userData.accessToken) &&\r\n               <div className='menu-list-item'\r\n                  onClick={this.logOut.bind(this)}\r\n               >\r\n                  <h4 style={{ color: appTheme.lightColor }}>\r\n                     Log Out\r\n                </h4>\r\n               </div>}\r\n         </div>\r\n      )\r\n   }\r\n\r\n   openFitmentPopOver = (e) => {\r\n      this.getFitmentList();\r\n      this.getFitmentYear();\r\n      this.overLayRef.current.toggle(e)\r\n   }\r\n\r\n\r\n   getFitmentList = () => {\r\n      let restUrl = `${PRODUCT_BASE_URL}fitment/garage`\r\n      serviceCall({}, restUrl, 'GET')\r\n         .then((res) => {\r\n            if (!res.error) {\r\n               this.setState({ fitmentList: res.data.garage })\r\n            } else {\r\n\r\n            }\r\n         })\r\n         .catch((error) => {\r\n         })\r\n   }\r\n\r\n   getFitmentYear = () => {\r\n      let restUrl = `${PRODUCT_BASE_URL}fitment/year`\r\n      serviceCall({}, restUrl, 'GET')\r\n         .then((res) => {\r\n            if (!res.error) {\r\n               this.setState({ fitmentYear: res.data.years })\r\n            } else {\r\n\r\n            }\r\n         })\r\n         .catch((error) => {\r\n         })\r\n   }\r\n\r\n   selectedYear(value) {\r\n      this.setState({ selectedYear: value }, () => {\r\n         this.getFitmentMake(value);\r\n      })\r\n   }\r\n\r\n   getFitmentMake = (year) => {\r\n      let restUrl = `${PRODUCT_BASE_URL}fitment/make/${year}`\r\n      serviceCall({}, restUrl, 'GET')\r\n         .then((res) => {\r\n            if (!res.error) {\r\n               this.setState({ fitmentMake: res.data.makes })\r\n            } else {\r\n\r\n            }\r\n         })\r\n         .catch((error) => {\r\n         })\r\n   }\r\n\r\n   selectedMake(value) {\r\n      this.setState({ selectedMake: value }, () => {\r\n         this.getFitmentModel(value);\r\n      })\r\n   }\r\n\r\n   getFitmentModel = (make) => {\r\n      let restUrl = `${PRODUCT_BASE_URL}fitment/model/${make}/${this.state.selectedYear}`\r\n      serviceCall({}, restUrl, 'GET')\r\n         .then((res) => {\r\n            if (!res.error) {\r\n               this.setState({ fitmentModel: res.data.models })\r\n            } else {\r\n\r\n            }\r\n         })\r\n         .catch((error) => {\r\n         })\r\n   }\r\n\r\n   addVehicle = () => {\r\n      const { selectedYear, selectedMake, selectedModel } = this.state;\r\n      if (!isNotEmpty(selectedYear)) {\r\n\r\n      } else if (!isNotEmpty(selectedMake)) {\r\n\r\n      } else if (!isNotEmpty(selectedModel)) {\r\n\r\n      } else {\r\n         let restUrl = `${PRODUCT_BASE_URL}fitment/garage/add/${selectedYear}/${selectedMake}/${selectedModel}`\r\n         serviceCall({}, restUrl, 'GET')\r\n            .then((res) => {\r\n               if (!res.error) {\r\n                  this.setState({ fitmentList: res.data.garage, createNewFitment: false })\r\n               } else {\r\n\r\n               }\r\n            })\r\n            .catch((error) => {\r\n            })\r\n      }\r\n\r\n   }\r\n\r\n   deleteVechile = (index) => {\r\n      let restUrl = `${PRODUCT_BASE_URL}fitment/garage/delete/${index}`\r\n      serviceCall({}, restUrl, 'GET')\r\n         .then((res) => {\r\n            if (!res.error) {\r\n               this.setState({ fitmentList: res.data.garage, createNewFitment: false })\r\n            } else {\r\n\r\n            }\r\n         })\r\n         .catch((error) => {\r\n         })\r\n   }\r\n\r\n\r\n\r\n\r\n\r\n   render() {\r\n      const { showSideMenu, categories, createNewFitment, showAccountPopOver, fitmentList, userData,\r\n         fitmentYear, fitmentMake, fitmentModel, selectedYear, selectedMake } = this.state\r\n      let { userdata } = this.props;\r\n\r\n      return (\r\n         <Fragment>\r\n            <div className=\"mobile-navbar-main\">\r\n               <i className=\"pi pi-align-justify\" style={{ color: '#fff', fontSize: 22 }} onClick={() => this.setState({ showSideMenu: true })} ></i>\r\n               <img src={logo} alt={'logo'} style={{ alignSelf: 'center' }} height=\"28px\" />\r\n               <Link to={'/cart'}>\r\n                  <Badge style={{ backgroundColor: appTheme.logoTextColor, borderColor: appTheme.secondaryColor }}\r\n                     count={userdata && userdata.cartcount ? userdata.cartcount : 0}>\r\n                     <ShoppingCartOutlined style={{ fontSize: '28px', color: '#fff' }} />\r\n                  </Badge>\r\n               </Link>\r\n            </div>\r\n            <div className=\"mobile-navbar-main\">\r\n               {/* <Search navProps={this.props.history} /> */}\r\n            </div>\r\n\r\n            <Drawer\r\n               placement=\"left\"\r\n               closable={false}\r\n               onClose={() => this.setState({ showSideMenu: false })}\r\n               visible={showSideMenu}\r\n            >\r\n               <div>\r\n                  <div className=\"menu-list-btn-item\">\r\n                     {(userData && userData.emailId) ?\r\n                        <div style={{ display: 'flex', flexDirection: 'row', }}>\r\n                           <Avatar size=\"large\" style={{ backgroundColor: appTheme.primaryColor }} >\r\n                              {userData.emailId.charAt(0)}\r\n                           </Avatar>\r\n                           <h3 style={{ alignSelf: 'center', marginLeft: 10 }}>{userData.emailId}</h3>\r\n                        </div> :\r\n                        <Link className=\"navbar-btn-text\" to=\"/login\">\r\n                           <OneButton\r\n                              buttonLabel={\"Login or Sign Up\"}\r\n                              btnSize=\"large\"\r\n                              buttonStyle={{\r\n                                 fontSize: 16, backgroundColor: appTheme.logoTextColor,\r\n                                 borderColor: appTheme.logoTextColor, width: 200, height: 40\r\n                              }}\r\n                           />\r\n                        </Link>}\r\n                  </div>\r\n                  <Link className='menu-list-item'\r\n                     to=\"/\"\r\n                  >\r\n                     <h4 style={{ color: appTheme.lightColor }}>\r\n                        Home\r\n                        </h4>\r\n                  </Link>\r\n                  <div className=\"mobilemenu-header\">\r\n                     <Link className=\"mobile-navbar-brand\"\r\n                        to={'/brands'}\r\n                     >Brands</Link>\r\n                  </div>\r\n                  <div className=\"mobilemenu-header\">\r\n                     Categories\r\n                  </div>\r\n                  <div>\r\n                     {categories.length !== 0 && categories.map((cat, index) =>\r\n                        <Link className='menu-list-item' key={index}\r\n                           to={{ pathname: '/products/category:' + cat.name, state: { catName: cat.name } }}\r\n                           onClick={this.hideMenuPopOver.bind(this)}\r\n                        >\r\n                           <h4 style={{ color: appTheme.lightColor }}>\r\n                              {cat.display_name}\r\n                           </h4>\r\n                        </Link>\r\n                     )}\r\n                  </div>\r\n\r\n                  {menuItems.map((item, index) =>\r\n                     <Link className='menu-list-item' key={index} to={item.screenToNavigate}\r\n                        onClick={this.hideMenuPopOver.bind(this)}\r\n                     >\r\n                        <h4 style={{ color: appTheme.lightColor }}>\r\n                           {item.navOptionName}\r\n                        </h4>\r\n                     </Link>\r\n                  )}\r\n                  {(userData && userData.accessToken) &&\r\n                     <div className='menu-list-item'\r\n                        onClick={this.logOut.bind(this)}\r\n                     >\r\n                        <h4 style={{ color: appTheme.lightColor }}>\r\n                           Log Out\r\n                        </h4>\r\n                     </div>}\r\n               </div>\r\n\r\n            </Drawer>\r\n         </Fragment>\r\n      )\r\n   }\r\n\r\n\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n   return {\r\n      userdata: state.userData,\r\n      loginData: state.userLoginData,\r\n      getCategories: state.getCategories\r\n   }\r\n}\r\nfunction mapDispatchToProps(dispatch) {\r\n   return {\r\n      getcategories: (catobj) => { dispatch({ type: 'GET_CAT', categories: catobj }) },\r\n      removeUserLoginData: () => {\r\n         dispatch({ type: \"REMOVE_LOGIN_DATA\" });\r\n      }\r\n   }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MobileNavbar);\r\n\r\n","F:\\onetruckparts\\src\\components\\Navbar\\DesktopNavbar.js",[],"F:\\onetruckparts\\src\\components\\Slider.js",[],"F:\\onetruckparts\\src\\components\\ProductCard\\ProductCard.js",[],"F:\\onetruckparts\\src\\store\\reducers\\reducers.js",["260"],"import {combineReducers} from 'redux';\r\nimport * as ActionTypes from '../actions/actionTypes';\r\n\r\nimport { createReducer } from '../../utils/createReducer';\r\n\r\n\r\nexport const getCategories = createReducer([], {\r\n    [ActionTypes.GET_CAT]: (state, action) => {\r\n      return action.categories;\r\n    }\r\n  })\r\n\r\nexport const userLoginData = createReducer({},{\r\n    [ActionTypes.SET_LOGIN_DATA](state, action) {\r\n      return action.data;\r\n    },\r\n    [ActionTypes.REMOVE_LOGIN_DATA](state, action) {\r\n      return {}\r\n    }\r\n})\r\n\r\n\r\nexport const userData = createReducer({}, {\r\n \r\n    [ActionTypes.USER_SELECTED_LOCATION]: (state, action) => {\r\n      return Object.assign({}, state, { location: action.location })\r\n    },\r\n    [ActionTypes.SET_CART_COUNT](state, action) {\r\n      return Object.assign({}, state, { cartcount: action.cartcount })\r\n    },\r\n    [ActionTypes.SET_APP_DATA](state, action) {\r\n      let obj = {}\r\n      for (let [key, value] of Object.entries(action.data)) {\r\n        obj[key] = value\r\n      }\r\n      return Object.assign({}, state, obj)\r\n    },\r\n   \r\n  })","F:\\onetruckparts\\src\\components\\Navbar\\Search.js",[],"F:\\onetruckparts\\src\\utils\\createReducer.js",[],"F:\\onetruckparts\\src\\store\\actions\\actionTypes.js",[],{"ruleId":"261","replacedBy":"262"},{"ruleId":"263","replacedBy":"264"},{"ruleId":"265","severity":1,"message":"266","line":123,"column":17,"nodeType":"267","messageId":"268","endLine":142,"endColumn":18},{"ruleId":"269","severity":1,"message":"270","line":121,"column":25,"nodeType":"271","messageId":"272","endLine":121,"endColumn":33},{"ruleId":"273","severity":1,"message":"274","line":108,"column":29,"nodeType":"275","endLine":109,"endColumn":122},{"ruleId":"273","severity":1,"message":"274","line":205,"column":20,"nodeType":"275","endLine":209,"endColumn":15},{"ruleId":"273","severity":1,"message":"274","line":215,"column":20,"nodeType":"275","endLine":216,"endColumn":106},{"ruleId":"273","severity":1,"message":"274","line":218,"column":20,"nodeType":"275","endLine":219,"endColumn":106},{"ruleId":"273","severity":1,"message":"274","line":311,"column":33,"nodeType":"275","endLine":312,"endColumn":122},{"ruleId":"276","severity":1,"message":"277","line":333,"column":29,"nodeType":"275","endLine":333,"endColumn":131},{"ruleId":"276","severity":1,"message":"277","line":334,"column":29,"nodeType":"275","endLine":334,"endColumn":125},{"ruleId":"276","severity":1,"message":"277","line":335,"column":29,"nodeType":"275","endLine":335,"endColumn":125},{"ruleId":"276","severity":1,"message":"277","line":336,"column":29,"nodeType":"275","endLine":336,"endColumn":124},{"ruleId":"276","severity":1,"message":"277","line":337,"column":29,"nodeType":"275","endLine":337,"endColumn":125},{"ruleId":"269","severity":1,"message":"278","line":4,"column":10,"nodeType":"271","messageId":"272","endLine":4,"endColumn":13},{"ruleId":"269","severity":1,"message":"279","line":4,"column":15,"nodeType":"271","messageId":"272","endLine":4,"endColumn":18},{"ruleId":"269","severity":1,"message":"280","line":4,"column":28,"nodeType":"271","messageId":"272","endLine":4,"endColumn":33},{"ruleId":"269","severity":1,"message":"281","line":23,"column":10,"nodeType":"271","messageId":"272","endLine":23,"endColumn":18},{"ruleId":"269","severity":1,"message":"282","line":27,"column":9,"nodeType":"271","messageId":"272","endLine":27,"endColumn":15},{"ruleId":"283","severity":1,"message":"284","line":226,"column":36,"nodeType":"285","messageId":"286","endLine":226,"endColumn":38},{"ruleId":"269","severity":1,"message":"287","line":3,"column":10,"nodeType":"271","messageId":"272","endLine":3,"endColumn":17},{"ruleId":"269","severity":1,"message":"288","line":3,"column":19,"nodeType":"271","messageId":"272","endLine":3,"endColumn":29},{"ruleId":"269","severity":1,"message":"289","line":11,"column":21,"nodeType":"271","messageId":"272","endLine":11,"endColumn":37},{"ruleId":"269","severity":1,"message":"278","line":3,"column":10,"nodeType":"271","messageId":"272","endLine":3,"endColumn":13},{"ruleId":"269","severity":1,"message":"279","line":3,"column":15,"nodeType":"271","messageId":"272","endLine":3,"endColumn":18},{"ruleId":"269","severity":1,"message":"290","line":3,"column":28,"nodeType":"271","messageId":"272","endLine":3,"endColumn":34},{"ruleId":"269","severity":1,"message":"291","line":6,"column":10,"nodeType":"271","messageId":"272","endLine":6,"endColumn":17},{"ruleId":"269","severity":1,"message":"292","line":7,"column":8,"nodeType":"271","messageId":"272","endLine":7,"endColumn":20},{"ruleId":"293","severity":1,"message":"294","line":11,"column":5,"nodeType":"295","messageId":"296","endLine":13,"endColumn":6},{"ruleId":"293","severity":1,"message":"294","line":6,"column":5,"nodeType":"295","messageId":"296","endLine":8,"endColumn":6},{"ruleId":"293","severity":1,"message":"294","line":6,"column":5,"nodeType":"295","messageId":"296","endLine":8,"endColumn":6},{"ruleId":"293","severity":1,"message":"294","line":6,"column":5,"nodeType":"295","messageId":"296","endLine":8,"endColumn":6},{"ruleId":"269","severity":1,"message":"297","line":7,"column":10,"nodeType":"271","messageId":"272","endLine":7,"endColumn":19},{"ruleId":"269","severity":1,"message":"281","line":18,"column":10,"nodeType":"271","messageId":"272","endLine":18,"endColumn":18},{"ruleId":"273","severity":1,"message":"274","line":35,"column":29,"nodeType":"275","endLine":35,"endColumn":119},{"ruleId":"273","severity":1,"message":"274","line":95,"column":25,"nodeType":"275","endLine":95,"endColumn":102},{"ruleId":"273","severity":1,"message":"274","line":96,"column":25,"nodeType":"275","endLine":96,"endColumn":105},{"ruleId":"273","severity":1,"message":"274","line":97,"column":25,"nodeType":"275","endLine":97,"endColumn":107},{"ruleId":"273","severity":1,"message":"274","line":98,"column":25,"nodeType":"275","endLine":98,"endColumn":107},{"ruleId":"298","severity":1,"message":"299","line":488,"column":25,"nodeType":"300","messageId":"301","endLine":488,"endColumn":36,"fix":"302"},{"ruleId":"269","severity":1,"message":"303","line":2,"column":37,"nodeType":"271","messageId":"272","endLine":2,"endColumn":45},{"ruleId":"269","severity":1,"message":"304","line":2,"column":46,"nodeType":"271","messageId":"272","endLine":2,"endColumn":54},{"ruleId":"269","severity":1,"message":"305","line":2,"column":55,"nodeType":"271","messageId":"272","endLine":2,"endColumn":69},{"ruleId":"269","severity":1,"message":"306","line":2,"column":10,"nodeType":"271","messageId":"272","endLine":2,"endColumn":25},{"ruleId":"269","severity":1,"message":"307","line":12,"column":4,"nodeType":"271","messageId":"272","endLine":12,"endColumn":16},{"ruleId":"269","severity":1,"message":"308","line":13,"column":4,"nodeType":"271","messageId":"272","endLine":13,"endColumn":15},{"ruleId":"269","severity":1,"message":"309","line":13,"column":17,"nodeType":"271","messageId":"272","endLine":13,"endColumn":29},{"ruleId":"269","severity":1,"message":"310","line":16,"column":8,"nodeType":"271","messageId":"272","endLine":16,"endColumn":14},{"ruleId":"269","severity":1,"message":"311","line":19,"column":8,"nodeType":"271","messageId":"272","endLine":19,"endColumn":17},{"ruleId":"269","severity":1,"message":"312","line":23,"column":49,"nodeType":"271","messageId":"272","endLine":23,"endColumn":58},{"ruleId":"269","severity":1,"message":"282","line":29,"column":9,"nodeType":"271","messageId":"272","endLine":29,"endColumn":15},{"ruleId":"269","severity":1,"message":"313","line":266,"column":41,"nodeType":"271","messageId":"272","endLine":266,"endColumn":57},{"ruleId":"269","severity":1,"message":"314","line":266,"column":59,"nodeType":"271","messageId":"272","endLine":266,"endColumn":77},{"ruleId":"269","severity":1,"message":"315","line":266,"column":79,"nodeType":"271","messageId":"272","endLine":266,"endColumn":90},{"ruleId":"269","severity":1,"message":"316","line":267,"column":10,"nodeType":"271","messageId":"272","endLine":267,"endColumn":21},{"ruleId":"269","severity":1,"message":"317","line":267,"column":23,"nodeType":"271","messageId":"272","endLine":267,"endColumn":34},{"ruleId":"269","severity":1,"message":"318","line":267,"column":36,"nodeType":"271","messageId":"272","endLine":267,"endColumn":48},{"ruleId":"269","severity":1,"message":"319","line":267,"column":50,"nodeType":"271","messageId":"272","endLine":267,"endColumn":62},{"ruleId":"269","severity":1,"message":"320","line":267,"column":64,"nodeType":"271","messageId":"272","endLine":267,"endColumn":76},{"ruleId":"269","severity":1,"message":"321","line":1,"column":9,"nodeType":"271","messageId":"272","endLine":1,"endColumn":24},"no-native-reassign",["322"],"no-negated-in-lhs",["323"],"default-case","Expected a default case.","SwitchStatement","missingDefaultCase","no-unused-vars","'userName' is assigned a value but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'Row' is defined but never used.","'Col' is defined but never used.","'Input' is defined but never used.","'appStore' is defined but never used.","'Option' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'message' is defined but never used.","'Pagination' is defined but never used.","'showToastMessage' is defined but never used.","'Button' is defined but never used.","'Divider' is defined but never used.","'Ordersuccess' is defined but never used.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","'InputText' is defined but never used.","no-whitespace-before-property","Unexpected whitespace before property state.","MemberExpression","unexpectedWhitespace",{"range":"324","text":"325"},"'cartList' is defined but never used.","'getDeals' is defined but never used.","'getAllProducts' is defined but never used.","'ProgressSpinner' is defined but never used.","'DownOutlined' is defined but never used.","'CarOutlined' is defined but never used.","'UserOutlined' is defined but never used.","'Search' is defined but never used.","'noFitment' is defined but never used.","'userRoles' is defined but never used.","'createNewFitment' is assigned a value but never used.","'showAccountPopOver' is assigned a value but never used.","'fitmentList' is assigned a value but never used.","'fitmentYear' is assigned a value but never used.","'fitmentMake' is assigned a value but never used.","'fitmentModel' is assigned a value but never used.","'selectedYear' is assigned a value but never used.","'selectedMake' is assigned a value but never used.","'combineReducers' is defined but never used.","no-global-assign","no-unsafe-negation",[19570,19572],"."]